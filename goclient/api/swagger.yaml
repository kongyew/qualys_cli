openapi: 3.0.1
info:
  title: Container Security API
  description: "# Authentication\nYou must authenticate to the Qualys Cloud Platform\
    \ using Qualys account credentials (user name and password) and get the JSON Web\
    \ Token (JWT) before you can start using the Container Security APIs.\nUse the\
    \ Qualys Authentication API to get the JWT.\n\n**Example Authentication Curl Request**:\n\
    \ncurl -X POST https://gateway/auth -H 'Content-Type: application/x-www-form-urlencoded'\
    \ -d 'username=value1&password=passwordValue&token=true'\nwhere\n- gateway is\
    \ the base URL to the Qualys API server where your account is located.\n- **username**\
    \ and **password** are the credentials of the user account for which you want\
    \ to fetch Container Security data.\n- **token** should be **true**\n- **Content-Type**\
    \ should be **application/x-www-form-urlencoded**\n"
  version: v1.3
servers:
- url: https://gateway.qg2.apps.qualys.com/csapi/v1.3
security:
- bearerAuth: []
tags:
- name: Container
  description: APIs to perform tasks on containers present on docker hosts
- name: Image
  description: APIs to perform tasks on images present on docker hosts
- name: Registry
  description: API to perform tasks on Registries
- name: Sensor
  description: API to perform tasks on sensors deployed in you environment
- name: Report
  description: API to generate reports of images and containers deployed in you environment
paths:
  /containers:
    get:
      tags:
      - Container
      summary: Show a list of containers in your account
      description: Show a list of containers in your account
      operationId: getCsContainersDataUsingGET
      parameters:
      - name: filter
        in: query
        description: Filter the containers list by providing a query using Qualys
          syntax.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ""
      - name: pageNumber
        in: query
        description: The page to be returned.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 1
      - name: pageSize
        in: query
        description: The number of records per page to be included in the response.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 50
      - name: sort
        in: query
        description: Sort the results using a Qualys token.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: created:desc
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Containers'
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    delete:
      tags:
      - Container
      summary: Delete containers in your account
      description: Provide one or more container Ids or filters in the format shown
        under Example Value.
      operationId: deleteCsContainers
      parameters:
      - name: containerIds
        in: query
        description: delete the containers from uuid
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: filter
        in: query
        description: delete the containers from filter
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "204":
          description: Not Content
          content: {}
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /containers/list:
    get:
      tags:
      - Container
      summary: Containers Bulk API
      description: Returns response with given number of Container records according
        to filter along with next page filter query.
      operationId: getContainerListWithDetails
      parameters:
      - name: filter
        in: query
        description: Filter the containers list by providing a query using Qualys
          syntax.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ""
      - name: paginationQuery
        in: query
        description: The next page filter query.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: The number of records per page to be included in the response.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 50
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkContainerDetailsList'
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /containers/{containerSha}:
    get:
      tags:
      - Container
      summary: show details of a container
      operationId: getContainerDetailsUsingGET
      parameters:
      - name: containerSha
        in: path
        description: Specify the SHA value of a Container in the user’s scope.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerDetails'
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /containers/{containerSha}/compliance:
    get:
      tags:
      - Container
      summary: show policy compliance details of a container
      operationId: getContainerPolicyComplianceDetailsUsingGET
      parameters:
      - name: containerSha
        in: path
        description: Specify the SHA value of a Container in the user’s scope.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyComplianceDetails'
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /containers/{containerSha}/software:
    get:
      tags:
      - Container
      summary: Show software installed on a container
      description: Show software installed on a container
      operationId: getContainerSoftwareUsingGET
      parameters:
      - name: containerSha
        in: path
        description: Specify the SHA value of a Container in the user’s scope.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Filter the containers list by providing a query using Qualys
          syntax.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ""
      - name: sort
        in: query
        description: Sort the results using a Qualys token. For example created:desc
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: created:desc
      - name: isDrift
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerSoftware'
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /containers/{containerSha}/vuln:
    get:
      tags:
      - Container
      summary: Show vulnerability details for a container
      description: Show vulnerability details for a container
      operationId: getContainerVulnUsingGET
      parameters:
      - name: containerSha
        in: path
        description: Specify the SHA value of a Container in the user’s scope.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Filter the container vulnerability details by providing a query
          using Qualys syntax.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - DETAILS
          - SUMMARY
          - ALL
          default: ALL
      - name: isDrift
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerVuln'
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /containers/{containerSha}/vuln/count:
    get:
      tags:
      - Container
      summary: Show vulnerability count for a container
      description: Show vulnerability count for a container
      operationId: getContainerVulnCountUsingGET
      parameters:
      - name: containerSha
        in: path
        description: Specify the SHA value of a Container in the user’s scope.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /controls:
    get:
      tags:
      - Control
      summary: Show list of controls
      description: Show list of controls
      operationId: getCsControlsList
      parameters:
      - name: filter
        in: query
        description: Filter the containers list by providing a query using Qualys
          syntax.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ""
      - name: pageNumber
        in: query
        description: The page to be returned.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 1
      - name: pageSize
        in: query
        description: The number of records per page to be included in the response.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 50
      - name: sort
        in: query
        description: Sort the results using a Qualys token.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PcControls'
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /controls/{controlId}:
    get:
      tags:
      - Control
      summary: Show details of control
      description: Show details of control
      operationId: getCsControlsDataUsingGET
      parameters:
      - name: controlId
        in: path
        description: Specify ID of control
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PcControl'
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /images:
    get:
      tags:
      - Image
      summary: Show a list of images in your account
      description: Show a list of images in your account
      operationId: getCsImagesDataUsingGET
      parameters:
      - name: filter
        in: query
        description: Filter the images list by providing a query using Qualys syntax.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ""
      - name: pageNumber
        in: query
        description: The page to be returned.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 1
      - name: pageSize
        in: query
        description: The number of records per page to be included in the response.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 50
      - name: sort
        in: query
        description: Sort the results using a Qualys token.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: created:desc
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Images'
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    delete:
      tags:
      - Image
      summary: Delete images in your account
      description: Provide one or more image Ids or filters in the format shown under
        Example Value.
      operationId: deleteCsImages
      parameters:
      - name: imageIds
        in: query
        description: delete the images from uuid
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: filter
        in: query
        description: delete the images from filter
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "204":
          description: Not Content
          content: {}
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /images/list:
    get:
      tags:
      - Image
      summary: Images Bulk API
      description: Returns response with given number of Image records according to
        filter along with next page filter query.
      operationId: getImageListWithDetails
      parameters:
      - name: filter
        in: query
        description: Filter the containers list by providing a query using Qualys
          syntax.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ""
      - name: paginationQuery
        in: query
        description: The next page filter query.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: The number of records per page to be included in the response.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 50
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkImageDetailsList'
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /images/{imageSha}:
    get:
      tags:
      - Image
      summary: show details of an image
      operationId: getImageDetailsUsingGET
      parameters:
      - name: imageSha
        in: path
        description: Specify the SHA value of an Image in the user’s scope.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageDetails'
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /images/{imageSha}/compliance:
    get:
      tags:
      - Image
      summary: show policy compliance details of an image
      operationId: getImagePolicyComplianceDetailsUsingGET
      parameters:
      - name: imageSha
        in: path
        description: Specify the SHA value of an Image in the user’s scope.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyComplianceDetails'
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /images/{imageSha}/association:
    get:
      tags:
      - Image
      summary: show associations of an image
      operationId: getImageAssociationUsingGET
      parameters:
      - name: imageSha
        in: path
        description: Specify the SHA value of an Image in the user’s scope.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - CONTAINER
          - DRIFT
          - HOST
          - ALL
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageAssociation'
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /images/{imageSha}/associatedRegistries:
    get:
      tags:
      - Image
      summary: Get associated registries with Image
      operationId: getImageRegistriesUsingGET
      parameters:
      - name: imageSha
        in: path
        description: Specify the SHA value of an Image in the user’s scope.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageRegistries'
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /images/{imageSha}/instrument:
    post:
      tags:
      - Image
      summary: Instrumenting the image identified by image id
      operationId: instrumenteImage
      parameters:
      - name: imageSha
        in: path
        description: Specify the SHA value of an Image in the user’s scope.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Provide parameter values in the format shown under Example Value.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstrumentRequest'
        required: true
      responses:
        "200":
          description: string
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      x-codegen-request-body-name: InstrumentRequest
  /images/{imageSha}/software:
    get:
      tags:
      - Image
      summary: Show software installed on an image
      operationId: getImageSoftwareUsingGET
      parameters:
      - name: imageSha
        in: path
        description: Specify the SHA value of an Image in the user’s scope.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Filter the image vulnerability details by providing a query using
          Qualys syntax.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sort
        in: query
        description: Sort the results using a Qualys token.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageSoftware'
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /images/{imageSha}/vuln:
    get:
      tags:
      - Image
      summary: Show vulnerability details for an image
      operationId: getImageVulnUsingGET
      parameters:
      - name: imageSha
        in: path
        description: Specify the SHA value of an Image in the user’s scope.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Filter the image vulnerability details by providing a query using
          Qualys syntax.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: "Specify the type of information to be fetched: Summary, Details,\
          \ All"
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ALL
          - SUMMARY
          - DETAILS
          default: ALL
      - name: sort
        in: query
        description: Sort the results using a Qualys token.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: qid:asc
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageVulnerability'
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /images/{imageSha}/vuln/count:
    get:
      tags:
      - Image
      summary: Show vulnerability count for an image
      description: Show vulnerability count for an image
      operationId: getImageVulnCountUsingGET
      parameters:
      - name: imageSha
        in: path
        description: Specify the SHA value of an Image in the user’s scope.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /registry:
    get:
      tags:
      - Registry
      summary: Show a list of registries in your account
      description: Show a list of registries in your account
      operationId: getCsRegistriesDataUsingGET
      parameters:
      - name: filter
        in: query
        description: Filter the registries list by providing a query using Qualys
          syntax.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ""
      - name: pageNumber
        in: query
        description: The page to be returned.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 1
      - name: pageSize
        in: query
        description: The number of records per page to be included in the response.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 50
      - name: sort
        in: query
        description: Sort the results using a Qualys token.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registries'
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    post:
      tags:
      - Registry
      summary: Create a new registry
      description: Create a new registry
      operationId: createCsRegistry
      requestBody:
        description: "Provide parameter values in the format shown under Example Value.\
          \ Parameters accountId, arn, and region are required when the registryType\
          \ is AWS ECR and you want to create a new AWS connector. Specify the ARN\
          \ if you want to use an existing AWS connector, or if you want to create\
          \ a new connector. All parameters are required other than dockerHubOrgName\
          \ which is optional."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistryRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      x-codegen-request-body-name: RegistryRequest
    delete:
      tags:
      - Registry
      summary: Delete multiple registries in your account
      description: Delete multiple registries in your account
      operationId: deleteCsRegistries
      responses:
        "200":
          description: string
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "204":
          description: Not Content
          content: {}
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      x-codegen-request-body-name: registryIds
  /registry/acr/connector:
    post:
      tags:
      - Registry
      summary: Create new ACR connector
      description: Create new ACR connector
      operationId: createCsAcrConnector
      requestBody:
        description: Provide parameter values in the format shown under Example Value.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcrConnectorRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      x-codegen-request-body-name: ACRConnectorRequest
  /registry/acr/connectors:
    get:
      tags:
      - Registry
      summary: Show list of ACR connectors in your account
      description: Show list of ACR connectors in your account
      operationId: getCsAcrConnectorsListUsingGET
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AcrConnector'
                x-content-type: application/json
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /registry/acr/connector/{connectorId}:
    get:
      tags:
      - Registry
      summary: Show ACR connector details
      description: Show ACR connector details
      operationId: getCsAcrConnectorsByAwsAccountIdUsingGET
      parameters:
      - name: connectorId
        in: path
        description: Provide the ACR connector Id to get connector details.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrConnector'
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /registry/aws-base:
    get:
      tags:
      - Registry
      summary: Fetch AWS account ID and external ID for your account
      description: Fetch AWS account ID and external ID for your account
      operationId: getCsAwsAccountIdUsingGET
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwsAccount'
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /registry/aws/connector:
    post:
      tags:
      - Registry
      summary: Create new AWS connector
      description: Create new AWS connector
      operationId: createCsAwsConnector
      requestBody:
        description: Provide parameter values in the format shown under Example Value.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AwsConnectorRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      x-codegen-request-body-name: AWSConnectorRequest
  /registry/aws/connectors:
    get:
      tags:
      - Registry
      summary: Show list of AWS connectors in your account
      description: Show list of AWS connectors in your account
      operationId: getCsAwsConnectorsListUsingGET
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwsConnector'
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /registry/aws/connectors/{accountId}:
    get:
      tags:
      - Registry
      summary: Show list of AWS connectors for an AWS account ID
      description: Show list of AWS connectors for an AWS account ID
      operationId: getCsAwsConnectorsByAwsAccountIdUsingGET
      parameters:
      - name: accountId
        in: path
        description: Provide the AWS account Id to get a list of connectors.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AwsConnector'
                x-content-type: application/json
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /registry/gcp/connector:
    post:
      tags:
      - Registry
      summary: Create new GCP connector
      description: Create new GCP connector
      operationId: createCsGcpConnector
      parameters:
      - name: name
        in: query
        description: Provide the name for the connector
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: description
        in: query
        description: Provide the description for the connector
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: connectorId
        in: query
        description: Provide the connector id for the connector
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/gcp_connector_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      x-codegen-request-body-name: GCPConnectorRequest
  /registry/gcp/connectors:
    get:
      tags:
      - Registry
      summary: Show list of GCP connectors in your account
      description: Show list of GCP connectors in your account
      operationId: getCsGcpConnectorsListUsingGET
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GcpConnector'
                x-content-type: application/json
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /registry/gcp/connector/{connectorId}:
    get:
      tags:
      - Registry
      summary: Get GCP connector by connectorId
      description: Get GCP connector by connectorId
      operationId: getCsGcpConnectorsByGcpConnectorIdUsingGET
      parameters:
      - name: connectorId
        in: path
        description: Provide the GCP connector Id to get connector details.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GcpConnector'
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /registry/validate:
    post:
      tags:
      - Registry
      summary: Validate information for new registry
      description: Validate information for new registry
      operationId: validateCsRegistry
      requestBody:
        description: "Validate parameters for a registry you intend to create. Provide\
          \ parameter values in the format shown under Example Value. Parameters accountId,\
          \ arn, and region are required when the registryType is AWS ECR and you\
          \ want to create a new AWS connector. Specify the ARN if you want to use\
          \ an existing AWS connector, or if you want to create a new connector. All\
          \ parameters are required other than dockerHubOrgName which is optional."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistryRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      x-codegen-request-body-name: RegistryRequest
  /registry/{registryId}:
    get:
      tags:
      - Registry
      summary: Show details of a registry
      description: Show details of a registry
      operationId: getCsRegistryDetails
      parameters:
      - name: registryId
        in: path
        description: Provide the ID/UUID of the registry you want to fetch the details.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistryDetails'
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    put:
      tags:
      - Registry
      summary: Update exiting registry in your account
      description: Update exiting registry in your account
      operationId: updateCsRegistry
      parameters:
      - name: registryId
        in: path
        description: Provide the ID/UUID of the registry you want to update.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Provide parameter values in the format shown under Example Value.
          registryType and registryUri are required even though they are not updatable.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistryRequest'
        required: true
      responses:
        "200":
          description: string
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      x-codegen-request-body-name: RegistryRequest
    delete:
      tags:
      - Registry
      summary: Delete registry in you account
      description: Delete registry in you account
      operationId: deleteCsRegistry
      parameters:
      - name: registryId
        in: path
        description: "Provide the ID/UUID of the registry you want to delete. Note:\
          \ You cannot delete a registry whose schedules are in “Running” state."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: string
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "204":
          description: No content
          content: {}
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /registry/{registryId}/repository:
    get:
      tags:
      - Registry
      summary: Show a list of repositories in a registry
      description: Show a list of repositories in a registry
      operationId: getCsRegistryRepositories
      parameters:
      - name: registryId
        in: path
        description: Provide the ID of the registry for which you want to list the
          repositories.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Filter the repository list by providing a query using Qualys
          syntax.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: pageNumber
        in: query
        description: The page to be returned.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 1
      - name: pageSize
        in: query
        description: The number of records per page to be included in the response.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 50
      - name: sort
        in: query
        description: Sort the results using a Qualys token.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repositories'
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /registry/{registryId}/schedule:
    get:
      tags:
      - Registry
      summary: Show a list of schedules created for a registry
      description: Show a list of schedules created for a registry
      operationId: getCsRegistrySchedules
      parameters:
      - name: registryId
        in: path
        description: Provide the ID of the registry for which you want to list the
          schedules.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Filter the schedules list by providing a query using Qualys syntax.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: pageNumber
        in: query
        description: The page to be returned.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 1
      - name: pageSize
        in: query
        description: The number of records per page to be included in the response.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 50
      - name: sort
        in: query
        description: Sort the results using a Qualys token.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedules'
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    post:
      tags:
      - Registry
      summary: Create a new Registry scan schedule
      description: Create a new Registry scan schedule
      operationId: createCsRegistrySchedule
      parameters:
      - name: registryId
        in: path
        description: Provide the ID of the registry for which you want to scan.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: "Provide parameter values in the format shown under Example Value.\
          \ Specify \"onDemand\": true if you want to scan immediately. Otherwise,\
          \ Automatic scan will be triggered everyday at a set time. For days, specify\
          \ 1 to 7 days / 14 (for last two weeks). For schedule, specify time in UTC,\
          \ e.g., 19:30."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleRequest'
        required: true
      responses:
        "200":
          description: string
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      x-codegen-request-body-name: ScheduleRequest
    delete:
      tags:
      - Registry
      summary: Delete multiple registry schedules in your account
      description: Delete multiple registry schedules in your account
      operationId: deleteCsRegistrySchedules
      parameters:
      - name: registryId
        in: path
        description: Provide the ID of the registry for which you want to delete.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: string
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "204":
          description: No content
          content: {}
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      x-codegen-request-body-name: scheduleIds
  /registry/{registryId}/schedule/{scheduleId}:
    put:
      tags:
      - Registry
      summary: Update existing registry schedule in your account
      description: Update existing registry schedule in your account
      operationId: updateCsRegistrySchedule
      parameters:
      - name: registryId
        in: path
        description: Provide the ID of the registry you want to update.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: scheduleId
        in: path
        description: Provide the ID/UUID of the schedule you want to update.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: "Provide parameter values in the format shown under Example Value.\
          \ Specify \"onDemand\": true if you want to scan immediately. Otherwise,\
          \ Automatic scan will be triggered everyday at a set time. For days, specify\
          \ 1 to 7 days / 14 (for last two weeks). For schedule, specify time in UTC,\
          \ e.g., 19:30."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleRequest'
        required: true
      responses:
        "200":
          description: string
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      x-codegen-request-body-name: ScheduleRequest
    delete:
      tags:
      - Registry
      summary: Delete registry schedule in your account
      description: Delete registry schedule in your account
      operationId: deleteCsRegistrySchedule
      parameters:
      - name: registryId
        in: path
        description: Provide the ID of the registry you want to delete.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: scheduleId
        in: path
        description: "Provide the ID/UUID of the schedule you want to delete. Note:\
          \ You cannot delete a schedule which is in “Running” state."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: string
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "204":
          description: No content
          content: {}
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /registry/{registryId}/schedule/{scheduleId}/cancel:
    post:
      tags:
      - Registry
      summary: Cancel registry schedule in your account.
      description: Cancel registry schedule in your account.
      operationId: cancelCsRegistrySchedule
      parameters:
      - name: registryId
        in: path
        description: Provide the ID/UUID of the registry you want to cancel the schedule
          for.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: scheduleId
        in: path
        description: "Provide the ID/UUID of the schedule you want to cancel. You\
          \ can only cancel schedules which are in the state: Created, Queued, Paused,\
          \ Running, BaselineQueued or BasinelineRunning"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: string
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /sensors:
    get:
      tags:
      - Sensor
      summary: Show a list of sensors in your account.
      description: Show a list of sensors in your account.
      operationId: getCsSensorsList
      parameters:
      - name: filter
        in: query
        description: Filter the sensors list by providing a query using Qualys syntax.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: pageNumber
        in: query
        description: The page to be returned.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 1
      - name: pageSize
        in: query
        description: The number of records per page to be included in the response.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 50
      - name: sort
        in: query
        description: Sort the results using a Qualys token.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sensors'
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    delete:
      tags:
      - Sensor
      summary: Delete sensors in your account
      description: Provide one or more sensor Ids or filters in the format shown under
        Example Value
      operationId: deleteCsSensors
      parameters:
      - name: sensorIds
        in: query
        description: delete the sensors from uuid
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: filter
        in: query
        description: delete the sensors from filter
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: string
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "204":
          description: No content
          content: {}
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /sensors/{sensorId}:
    get:
      tags:
      - Sensor
      summary: Show details of a sensor
      description: Show details of a sensor
      operationId: getCsSensorDetails
      parameters:
      - name: sensorId
        in: path
        description: Specify the sensor ID of a specific sensor in the user’s scope
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sensor'
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /activationkey:
    get:
      tags:
      - Activation
      summary: Sensor Activation API
      description: "Returns customerId, activationId, platformUrl which is required\
        \ to activate CS sensor."
      operationId: getSensorActivationKeys
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /reports:
    get:
      tags:
      - Report
      summary: Show a list of reports in your account.
      description: Show a list of reports in your account.
      operationId: getCsReportsList
      parameters:
      - name: filter
        in: query
        description: Filter the reports list by providing a query using Qualys syntax.Only
          reportName is supported in filter query.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: pageNumber
        in: query
        description: The page to be returned.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 1
      - name: pageSize
        in: query
        description: The number of records per page to be included in the response.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 50
      - name: sort
        in: query
        description: Supported values are reportName/ status.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: status:desc
        example: status:desc
      responses:
        "200":
          description: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reports'
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    post:
      tags:
      - Report
      summary: Create Report request
      operationId: createReportRequest
      requestBody:
        description: "Provide parameter values in the format shown under Example Value.\
          \ displayColumns can have following values if your template is <table> <tr>\
          \ <th>CS_IMAGE_VULNERABILITY</th> <td>repo, imageId, sha, uuid, created,\
          \ updated,  qid, title, severity, cveids, vendorReference, cvssBase, cvssTemporal,\
          \ cvss3Base, cvss3Temporal, threat, impact, solution, exploitability, associatedMalwares,\
          \ category, software, result</td> </tr> <tr> <th>CS_CONTAINER_VULNERABILITY</th>\
          \ <td> name, containerId, uuid, imageId, created, hostName, hostIp, state,\
          \ stateChanged, updated,  qid, title, severity, cveids, vendorReference,\
          \ cvssBase, cvssTemporal, cvss3Base, cvss3Temporal, threat, impact, solution,\
          \ exploitability, associatedMalwares, category, software, result</td> </tr>\
          \ </table> <BR>"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportRequest'
        required: true
      responses:
        "200":
          description: string
          content:
            application/json:
              schema:
                type: string
                example: uuid
                x-content-type: application/json
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      x-codegen-request-body-name: ReportRequest
    delete:
      tags:
      - Report
      summary: Delete Reports in your account
      description: Delete Reports in your account
      operationId: deleteCsReports
      parameters:
      - name: reportUuids
        in: query
        description: delete the reports from uuid
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsDeleteSucccess'
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /reports/{reportUuid}/download:
    get:
      tags:
      - Report
      summary: Show a details of a Report.
      description: Show a details of a Report.
      operationId: getCsReportDownload
      parameters:
      - name: reportUuid
        in: path
        description: Specify the report UUID of a specific report in the user’s scope
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: string
          content:
            application/octet-stream:
              schema:
                type: object
                x-content-type: application/octet-stream
        "401":
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
components:
  schemas:
    Activation:
      type: object
      properties:
        customerId:
          type: string
          format: uuid
        activationId:
          type: string
          format: uuid
        platformUrl:
          type: string
          format: uri
      example:
        platformUrl: http://example.com/aeiou
        customerId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        activationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    PcControls:
      type: object
      properties:
        count:
          type: integer
        data:
          type: array
          items:
            $ref: '#/components/schemas/PcControl'
      example:
        data:
        - technologies:
          - remediation: remediation
            technologyName: technologyName
            technologyId: 1
            rational: rational
          - remediation: remediation
            technologyName: technologyName
            technologyId: 1
            rational: rational
          subCategory: subCategory
          comments: comments
          deprecated: deprecated
          statement: statement
          criticality: criticality
          id: 6
          category: category
        - technologies:
          - remediation: remediation
            technologyName: technologyName
            technologyId: 1
            rational: rational
          - remediation: remediation
            technologyName: technologyName
            technologyId: 1
            rational: rational
          subCategory: subCategory
          comments: comments
          deprecated: deprecated
          statement: statement
          criticality: criticality
          id: 6
          category: category
        count: 0
    PcControl:
      type: object
      properties:
        id:
          type: integer
        statement:
          type: string
        criticality:
          type: string
        comments:
          type: string
        deprecated:
          type: string
        category:
          type: string
        subCategory:
          type: string
        technologies:
          type: array
          items:
            $ref: '#/components/schemas/ControlTechnology'
      example:
        technologies:
        - remediation: remediation
          technologyName: technologyName
          technologyId: 1
          rational: rational
        - remediation: remediation
          technologyName: technologyName
          technologyId: 1
          rational: rational
        subCategory: subCategory
        comments: comments
        deprecated: deprecated
        statement: statement
        criticality: criticality
        id: 6
        category: category
    ControlTechnology:
      type: object
      properties:
        technologyId:
          type: integer
        technologyName:
          type: string
        rational:
          type: string
        remediation:
          type: string
      example:
        remediation: remediation
        technologyName: technologyName
        technologyId: 1
        rational: rational
    ContainerSoftware:
      type: object
      properties:
        count:
          type: integer
        data:
          type: array
          items:
            $ref: '#/components/schemas/Software'
        softwareCountBySeverity:
          type: object
          properties: {}
          example: {}
      example:
        data:
        - name: name
          vulnerabilities:
          - null
          - null
          fixVersion: fixVersion
          version: version
        - name: name
          vulnerabilities:
          - null
          - null
          fixVersion: fixVersion
          version: version
        count: 0
        softwareCountBySeverity: {}
    ContainerVuln:
      type: object
      properties:
        details:
          $ref: '#/components/schemas/ContainerVuln_details'
        VunlSummary:
          $ref: '#/components/schemas/VunlSummary'
      example:
        VunlSummary:
          confirmed: {}
          potential: {}
          patchAvailability:
            confirmed: {}
            potential: {}
        details:
          vulns:
          - null
          - null
          driftVulns:
          - software:
            - name: name
              vulnerabilities:
              - null
              - null
              fixVersion: fixVersion
              version: version
            - name: name
              vulnerabilities:
              - null
              - null
              fixVersion: fixVersion
              version: version
            patchAvailable: true
            cvssInfo:
              temporalScore: temporalScore
              baseScore: baseScore
              accessVector: accessVector
            supportedBy:
            - supportedBy
            - supportedBy
            source: source
            title: title
            qid: 6
            result: result
            lastFound: lastFound
            typeDetected: typeDetected
            cvss3Info:
              temporalScore: temporalScore
              baseScore: baseScore
            vendor:
            - vendor
            - vendor
            authType:
            - authType
            - authType
            discoveryType:
            - discoveryType
            - discoveryType
            severity: 5
            product:
            - product
            - product
            published: 0
            vulnerability: 5
            containerResult: containerResult
            threatIntel:
              publicExploit: true
              denialOfService: true
              easyExploit: true
              malware: true
              highDataLoss: true
              highLateralMovement: true
              noPatch: true
              exploitKit: true
              malwareNames:
              - malwareNames
              - malwareNames
              exploitKitNames:
              - exploitKitNames
              - exploitKitNames
              activeAttacks: true
              publicExploitNames:
              - publicExploitNames
              - publicExploitNames
              zeroDay: true
            port: port
            cveids:
            - cveids
            - cveids
            customerSeverity: customerSeverity
            imageResult: imageResult
            firstFound: firstFound
            risk: 1
            category: category
            status: status
          - software:
            - name: name
              vulnerabilities:
              - null
              - null
              fixVersion: fixVersion
              version: version
            - name: name
              vulnerabilities:
              - null
              - null
              fixVersion: fixVersion
              version: version
            patchAvailable: true
            cvssInfo:
              temporalScore: temporalScore
              baseScore: baseScore
              accessVector: accessVector
            supportedBy:
            - supportedBy
            - supportedBy
            source: source
            title: title
            qid: 6
            result: result
            lastFound: lastFound
            typeDetected: typeDetected
            cvss3Info:
              temporalScore: temporalScore
              baseScore: baseScore
            vendor:
            - vendor
            - vendor
            authType:
            - authType
            - authType
            discoveryType:
            - discoveryType
            - discoveryType
            severity: 5
            product:
            - product
            - product
            published: 0
            vulnerability: 5
            containerResult: containerResult
            threatIntel:
              publicExploit: true
              denialOfService: true
              easyExploit: true
              malware: true
              highDataLoss: true
              highLateralMovement: true
              noPatch: true
              exploitKit: true
              malwareNames:
              - malwareNames
              - malwareNames
              exploitKitNames:
              - exploitKitNames
              - exploitKitNames
              activeAttacks: true
              publicExploitNames:
              - publicExploitNames
              - publicExploitNames
              zeroDay: true
            port: port
            cveids:
            - cveids
            - cveids
            customerSeverity: customerSeverity
            imageResult: imageResult
            firstFound: firstFound
            risk: 1
            category: category
            status: status
    VunlSummary:
      type: object
      properties:
        confirmed:
          type: object
          properties: {}
          example: {}
        patchAvailability:
          $ref: '#/components/schemas/VunlSummary_patchAvailability'
        potential:
          type: object
          properties: {}
          example: {}
      example:
        confirmed: {}
        potential: {}
        patchAvailability:
          confirmed: {}
          potential: {}
    Containers:
      type: object
      properties:
        count:
          type: integer
        data:
          type: array
          items:
            $ref: '#/components/schemas/ContainerWithComplianceDetails'
      example:
        data:
        - ""
        - ""
        count: 0
    ContainerWithComplianceDetails:
      allOf:
      - $ref: '#/components/schemas/Container'
      - type: object
        properties:
          compliance:
            type: object
            properties: {}
          lastComplianceScanned:
            type: string
    Container:
      type: object
      properties:
        imageId:
          type: string
        created:
          type: string
        updated:
          type: string
        sha:
          type: string
        name:
          type: string
        host:
          $ref: '#/components/schemas/Host'
        state:
          type: string
        imageUuid:
          type: string
        containerId:
          type: string
        stateChanged:
          type: string
        lastScanned:
          type: string
        isRoot:
          type: boolean
          example: true
        vulnerabilities:
          type: object
        isInstrumented:
          type: boolean
          example: true
      example:
        imageId: imageId
        isRoot: true
        created: created
        sha: sha
        lastScanned: lastScanned
        isInstrumented: true
        name: name
        host:
          sensorUuid: sensorUuid
          hostname: hostname
          ipAddress: ipAddress
          uuid: uuid
        vulnerabilities: {}
        state: state
        containerId: containerId
        stateChanged: stateChanged
        updated: updated
        imageUuid: imageUuid
    BulkContainerDetailsList:
      type: object
      properties:
        limit:
          type: integer
        data:
          type: array
          items:
            $ref: '#/components/schemas/BulkContainerDetails'
      example:
        data:
        - portMapping:
          - {}
          - {}
          cluster:
            k8s:
              node:
                isMaster: true
                name: name
              pod:
                controller:
                - name: name
                  type: type
                  uuid: uuid
                - name: name
                  type: type
                  uuid: uuid
                name: name
                namespace: namespace
                label:
                - value: value
                  key: key
                - value: value
                  key: key
                uuid: uuid
              project: project
            type: kubernetes
            version: version
          source: source
          uuid: uuid
          operatingSystem: operatingSystem
          lastScanned: lastScanned
          path: path
          imageSha: imageSha
          customerUuid: customerUuid
          isInstrumented: true
          ipv4: ipv4
          ipv6: ipv6
          host:
            sensorUuid: sensorUuid
            hostname: hostname
            ipAddress: ipAddress
            uuid: uuid
          state: state
          containerId: containerId
          imageUuid: imageUuid
          drift:
          - {}
          - {}
          imageId: imageId
          softwares:
          - {}
          - {}
          created: created
          label:
          - value: value
            key: key
          - value: value
            key: key
          services:
          - {}
          - {}
          sha: sha
          users:
          - users
          - users
          command: command
          privileged: true
          macAddress: macAddress
          environment:
          - {}
          - {}
          name: name
          vulnerabilities:
          - {}
          - {}
          arguments:
          - {}
          - {}
          stateChanged: stateChanged
          updated: updated
        - portMapping:
          - {}
          - {}
          cluster:
            k8s:
              node:
                isMaster: true
                name: name
              pod:
                controller:
                - name: name
                  type: type
                  uuid: uuid
                - name: name
                  type: type
                  uuid: uuid
                name: name
                namespace: namespace
                label:
                - value: value
                  key: key
                - value: value
                  key: key
                uuid: uuid
              project: project
            type: kubernetes
            version: version
          source: source
          uuid: uuid
          operatingSystem: operatingSystem
          lastScanned: lastScanned
          path: path
          imageSha: imageSha
          customerUuid: customerUuid
          isInstrumented: true
          ipv4: ipv4
          ipv6: ipv6
          host:
            sensorUuid: sensorUuid
            hostname: hostname
            ipAddress: ipAddress
            uuid: uuid
          state: state
          containerId: containerId
          imageUuid: imageUuid
          drift:
          - {}
          - {}
          imageId: imageId
          softwares:
          - {}
          - {}
          created: created
          label:
          - value: value
            key: key
          - value: value
            key: key
          services:
          - {}
          - {}
          sha: sha
          users:
          - users
          - users
          command: command
          privileged: true
          macAddress: macAddress
          environment:
          - {}
          - {}
          name: name
          vulnerabilities:
          - {}
          - {}
          arguments:
          - {}
          - {}
          stateChanged: stateChanged
          updated: updated
        limit: 0
    BulkContainerDetails:
      type: object
      properties:
        imageId:
          type: string
        created:
          type: string
        updated:
          type: string
        label:
          type: array
          items:
            $ref: '#/components/schemas/BulkContainerDetails_label'
        uuid:
          type: string
        sha:
          type: string
        privileged:
          type: boolean
          example: true
        path:
          type: string
        imageSha:
          type: string
        macAddress:
          type: string
        customerUuid:
          type: string
        ipv4:
          type: string
        ipv6:
          type: string
        name:
          type: string
        host:
          $ref: '#/components/schemas/Host'
        state:
          type: string
        imageUuid:
          type: string
        containerId:
          type: string
        stateChanged:
          type: string
        services:
          type: array
          items:
            type: object
        portMapping:
          type: array
          items:
            type: object
        users:
          type: array
          items:
            type: string
        operatingSystem:
          type: string
        lastScanned:
          type: string
        source:
          type: string
        isInstrumented:
          type: boolean
          example: true
        environment:
          type: array
          items:
            type: object
        arguments:
          type: array
          items:
            type: object
        command:
          type: string
        drift:
          type: array
          items:
            type: object
        vulnerabilities:
          type: array
          items:
            type: object
        softwares:
          type: array
          items:
            type: object
        cluster:
          $ref: '#/components/schemas/Cluster'
      example:
        portMapping:
        - {}
        - {}
        cluster:
          k8s:
            node:
              isMaster: true
              name: name
            pod:
              controller:
              - name: name
                type: type
                uuid: uuid
              - name: name
                type: type
                uuid: uuid
              name: name
              namespace: namespace
              label:
              - value: value
                key: key
              - value: value
                key: key
              uuid: uuid
            project: project
          type: kubernetes
          version: version
        source: source
        uuid: uuid
        operatingSystem: operatingSystem
        lastScanned: lastScanned
        path: path
        imageSha: imageSha
        customerUuid: customerUuid
        isInstrumented: true
        ipv4: ipv4
        ipv6: ipv6
        host:
          sensorUuid: sensorUuid
          hostname: hostname
          ipAddress: ipAddress
          uuid: uuid
        state: state
        containerId: containerId
        imageUuid: imageUuid
        drift:
        - {}
        - {}
        imageId: imageId
        softwares:
        - {}
        - {}
        created: created
        label:
        - value: value
          key: key
        - value: value
          key: key
        services:
        - {}
        - {}
        sha: sha
        users:
        - users
        - users
        command: command
        privileged: true
        macAddress: macAddress
        environment:
        - {}
        - {}
        name: name
        vulnerabilities:
        - {}
        - {}
        arguments:
        - {}
        - {}
        stateChanged: stateChanged
        updated: updated
    Host:
      type: object
      properties:
        hostname:
          type: string
        ipAddress:
          type: string
        sensorUuid:
          type: string
        uuid:
          type: string
      example:
        sensorUuid: sensorUuid
        hostname: hostname
        ipAddress: ipAddress
        uuid: uuid
    Drift:
      type: object
      properties:
        category:
          type: array
          items:
            type: string
        reason:
          type: array
          items:
            type: string
        software:
          type: array
          items:
            $ref: '#/components/schemas/Drift_software'
        vulnerability:
          type: array
          items:
            $ref: '#/components/schemas/Vulnerability'
      example:
        reason:
        - reason
        - reason
        software:
        - reason: reason
          name: name
          vulnerabilities:
          - software:
            - name: name
              vulnerabilities:
              - null
              - null
              fixVersion: fixVersion
              version: version
            - name: name
              vulnerabilities:
              - null
              - null
              fixVersion: fixVersion
              version: version
            patchAvailable: true
            cvssInfo:
              temporalScore: temporalScore
              baseScore: baseScore
              accessVector: accessVector
            supportedBy:
            - supportedBy
            - supportedBy
            source: source
            title: title
            qid: 6
            result: result
            lastFound: lastFound
            typeDetected: typeDetected
            cvss3Info:
              temporalScore: temporalScore
              baseScore: baseScore
            vendor:
            - vendor
            - vendor
            authType:
            - authType
            - authType
            discoveryType:
            - discoveryType
            - discoveryType
            severity: 5
            product:
            - product
            - product
            published: 0
            vulnerability: 5
            containerResult: containerResult
            threatIntel:
              publicExploit: true
              denialOfService: true
              easyExploit: true
              malware: true
              highDataLoss: true
              highLateralMovement: true
              noPatch: true
              exploitKit: true
              malwareNames:
              - malwareNames
              - malwareNames
              exploitKitNames:
              - exploitKitNames
              - exploitKitNames
              activeAttacks: true
              publicExploitNames:
              - publicExploitNames
              - publicExploitNames
              zeroDay: true
            port: port
            cveids:
            - cveids
            - cveids
            customerSeverity: customerSeverity
            imageResult: imageResult
            firstFound: firstFound
            risk: 1
            category: category
            status: status
          - software:
            - name: name
              vulnerabilities:
              - null
              - null
              fixVersion: fixVersion
              version: version
            - name: name
              vulnerabilities:
              - null
              - null
              fixVersion: fixVersion
              version: version
            patchAvailable: true
            cvssInfo:
              temporalScore: temporalScore
              baseScore: baseScore
              accessVector: accessVector
            supportedBy:
            - supportedBy
            - supportedBy
            source: source
            title: title
            qid: 6
            result: result
            lastFound: lastFound
            typeDetected: typeDetected
            cvss3Info:
              temporalScore: temporalScore
              baseScore: baseScore
            vendor:
            - vendor
            - vendor
            authType:
            - authType
            - authType
            discoveryType:
            - discoveryType
            - discoveryType
            severity: 5
            product:
            - product
            - product
            published: 0
            vulnerability: 5
            containerResult: containerResult
            threatIntel:
              publicExploit: true
              denialOfService: true
              easyExploit: true
              malware: true
              highDataLoss: true
              highLateralMovement: true
              noPatch: true
              exploitKit: true
              malwareNames:
              - malwareNames
              - malwareNames
              exploitKitNames:
              - exploitKitNames
              - exploitKitNames
              activeAttacks: true
              publicExploitNames:
              - publicExploitNames
              - publicExploitNames
              zeroDay: true
            port: port
            cveids:
            - cveids
            - cveids
            customerSeverity: customerSeverity
            imageResult: imageResult
            firstFound: firstFound
            risk: 1
            category: category
            status: status
          source: source
          fixVersion: fixVersion
          version: version
        - reason: reason
          name: name
          vulnerabilities:
          - software:
            - name: name
              vulnerabilities:
              - null
              - null
              fixVersion: fixVersion
              version: version
            - name: name
              vulnerabilities:
              - null
              - null
              fixVersion: fixVersion
              version: version
            patchAvailable: true
            cvssInfo:
              temporalScore: temporalScore
              baseScore: baseScore
              accessVector: accessVector
            supportedBy:
            - supportedBy
            - supportedBy
            source: source
            title: title
            qid: 6
            result: result
            lastFound: lastFound
            typeDetected: typeDetected
            cvss3Info:
              temporalScore: temporalScore
              baseScore: baseScore
            vendor:
            - vendor
            - vendor
            authType:
            - authType
            - authType
            discoveryType:
            - discoveryType
            - discoveryType
            severity: 5
            product:
            - product
            - product
            published: 0
            vulnerability: 5
            containerResult: containerResult
            threatIntel:
              publicExploit: true
              denialOfService: true
              easyExploit: true
              malware: true
              highDataLoss: true
              highLateralMovement: true
              noPatch: true
              exploitKit: true
              malwareNames:
              - malwareNames
              - malwareNames
              exploitKitNames:
              - exploitKitNames
              - exploitKitNames
              activeAttacks: true
              publicExploitNames:
              - publicExploitNames
              - publicExploitNames
              zeroDay: true
            port: port
            cveids:
            - cveids
            - cveids
            customerSeverity: customerSeverity
            imageResult: imageResult
            firstFound: firstFound
            risk: 1
            category: category
            status: status
          - software:
            - name: name
              vulnerabilities:
              - null
              - null
              fixVersion: fixVersion
              version: version
            - name: name
              vulnerabilities:
              - null
              - null
              fixVersion: fixVersion
              version: version
            patchAvailable: true
            cvssInfo:
              temporalScore: temporalScore
              baseScore: baseScore
              accessVector: accessVector
            supportedBy:
            - supportedBy
            - supportedBy
            source: source
            title: title
            qid: 6
            result: result
            lastFound: lastFound
            typeDetected: typeDetected
            cvss3Info:
              temporalScore: temporalScore
              baseScore: baseScore
            vendor:
            - vendor
            - vendor
            authType:
            - authType
            - authType
            discoveryType:
            - discoveryType
            - discoveryType
            severity: 5
            product:
            - product
            - product
            published: 0
            vulnerability: 5
            containerResult: containerResult
            threatIntel:
              publicExploit: true
              denialOfService: true
              easyExploit: true
              malware: true
              highDataLoss: true
              highLateralMovement: true
              noPatch: true
              exploitKit: true
              malwareNames:
              - malwareNames
              - malwareNames
              exploitKitNames:
              - exploitKitNames
              - exploitKitNames
              activeAttacks: true
              publicExploitNames:
              - publicExploitNames
              - publicExploitNames
              zeroDay: true
            port: port
            cveids:
            - cveids
            - cveids
            customerSeverity: customerSeverity
            imageResult: imageResult
            firstFound: firstFound
            risk: 1
            category: category
            status: status
          source: source
          fixVersion: fixVersion
          version: version
        vulnerability:
        - null
        - null
        category:
        - category
        - category
    ControlDetails:
      type: object
      properties:
        controlId:
          type: integer
        policyUuid:
          type: string
        technologyId:
          type: integer
        criticality:
          type: string
        posture:
          type: string
        lastEvaluated:
          type: string
        datapoints:
          type: array
          items:
            $ref: '#/components/schemas/Datapoints'
      example:
        policyUuid: policyUuid
        datapoints:
        - value: value
          key: key
        - value: value
          key: key
        posture: posture
        criticality: criticality
        lastEvaluated: lastEvaluated
        controlId: 0
        technologyId: 6
    Datapoints:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      example:
        value: value
        key: key
    ContainerDetails:
      type: object
      properties:
        arguments:
          type: array
          items:
            type: string
        command:
          type: string
        containerId:
          type: string
        created:
          type: string
        customerUuid:
          type: string
        drift:
          $ref: '#/components/schemas/Drift'
        environment:
          type: array
          items:
            type: string
        host:
          $ref: '#/components/schemas/Host'
        hostname:
          type: string
        imageId:
          type: string
        imageSha:
          type: string
        imageUuid:
          type: string
        ipv4:
          type: string
        ipv6:
          type: string
        isDrift:
          type: boolean
        isInstrumented:
          type: boolean
        isRoot:
          type: boolean
        label:
          type: array
          items:
            $ref: '#/components/schemas/BulkContainerDetails_label'
        labelScanned:
          type: string
        macAddress:
          type: string
        name:
          type: string
        operatingSystem:
          type: string
        path:
          type: string
        portMapping:
          type: array
          items:
            $ref: '#/components/schemas/PortMapping'
        privileged:
          type: boolean
        sensorUuid:
          type: string
        services:
          type: array
          items:
            $ref: '#/components/schemas/ContainerDetails_services'
        sha:
          type: string
        softwares:
          type: array
          items:
            $ref: '#/components/schemas/ContainerDetails_softwares'
        source:
          type: string
        state:
          type: string
        stateChanged:
          type: string
        users:
          type: array
          items:
            type: string
        uuid:
          type: string
        vulnerabilities:
          type: array
          items:
            $ref: '#/components/schemas/Vulnerability'
        cluster:
          $ref: '#/components/schemas/Cluster'
      example:
        isDrift: true
        portMapping:
        - protocol: protocol
          hostIp: hostIp
          port: 7
          hostPort: 2
        - protocol: protocol
          hostIp: hostIp
          port: 7
          hostPort: 2
        cluster:
          k8s:
            node:
              isMaster: true
              name: name
            pod:
              controller:
              - name: name
                type: type
                uuid: uuid
              - name: name
                type: type
                uuid: uuid
              name: name
              namespace: namespace
              label:
              - value: value
                key: key
              - value: value
                key: key
              uuid: uuid
            project: project
          type: kubernetes
          version: version
        isRoot: true
        labelScanned: labelScanned
        source: source
        operatingSystem: operatingSystem
        uuid: uuid
        path: path
        sensorUuid: sensorUuid
        hostname: hostname
        imageSha: imageSha
        customerUuid: customerUuid
        isInstrumented: true
        ipv4: ipv4
        ipv6: ipv6
        host:
          sensorUuid: sensorUuid
          hostname: hostname
          ipAddress: ipAddress
          uuid: uuid
        state: state
        containerId: containerId
        imageUuid: imageUuid
        drift:
          reason:
          - reason
          - reason
          software:
          - reason: reason
            name: name
            vulnerabilities:
            - software:
              - name: name
                vulnerabilities:
                - null
                - null
                fixVersion: fixVersion
                version: version
              - name: name
                vulnerabilities:
                - null
                - null
                fixVersion: fixVersion
                version: version
              patchAvailable: true
              cvssInfo:
                temporalScore: temporalScore
                baseScore: baseScore
                accessVector: accessVector
              supportedBy:
              - supportedBy
              - supportedBy
              source: source
              title: title
              qid: 6
              result: result
              lastFound: lastFound
              typeDetected: typeDetected
              cvss3Info:
                temporalScore: temporalScore
                baseScore: baseScore
              vendor:
              - vendor
              - vendor
              authType:
              - authType
              - authType
              discoveryType:
              - discoveryType
              - discoveryType
              severity: 5
              product:
              - product
              - product
              published: 0
              vulnerability: 5
              containerResult: containerResult
              threatIntel:
                publicExploit: true
                denialOfService: true
                easyExploit: true
                malware: true
                highDataLoss: true
                highLateralMovement: true
                noPatch: true
                exploitKit: true
                malwareNames:
                - malwareNames
                - malwareNames
                exploitKitNames:
                - exploitKitNames
                - exploitKitNames
                activeAttacks: true
                publicExploitNames:
                - publicExploitNames
                - publicExploitNames
                zeroDay: true
              port: port
              cveids:
              - cveids
              - cveids
              customerSeverity: customerSeverity
              imageResult: imageResult
              firstFound: firstFound
              risk: 1
              category: category
              status: status
            - software:
              - name: name
                vulnerabilities:
                - null
                - null
                fixVersion: fixVersion
                version: version
              - name: name
                vulnerabilities:
                - null
                - null
                fixVersion: fixVersion
                version: version
              patchAvailable: true
              cvssInfo:
                temporalScore: temporalScore
                baseScore: baseScore
                accessVector: accessVector
              supportedBy:
              - supportedBy
              - supportedBy
              source: source
              title: title
              qid: 6
              result: result
              lastFound: lastFound
              typeDetected: typeDetected
              cvss3Info:
                temporalScore: temporalScore
                baseScore: baseScore
              vendor:
              - vendor
              - vendor
              authType:
              - authType
              - authType
              discoveryType:
              - discoveryType
              - discoveryType
              severity: 5
              product:
              - product
              - product
              published: 0
              vulnerability: 5
              containerResult: containerResult
              threatIntel:
                publicExploit: true
                denialOfService: true
                easyExploit: true
                malware: true
                highDataLoss: true
                highLateralMovement: true
                noPatch: true
                exploitKit: true
                malwareNames:
                - malwareNames
                - malwareNames
                exploitKitNames:
                - exploitKitNames
                - exploitKitNames
                activeAttacks: true
                publicExploitNames:
                - publicExploitNames
                - publicExploitNames
                zeroDay: true
              port: port
              cveids:
              - cveids
              - cveids
              customerSeverity: customerSeverity
              imageResult: imageResult
              firstFound: firstFound
              risk: 1
              category: category
              status: status
            source: source
            fixVersion: fixVersion
            version: version
          - reason: reason
            name: name
            vulnerabilities:
            - software:
              - name: name
                vulnerabilities:
                - null
                - null
                fixVersion: fixVersion
                version: version
              - name: name
                vulnerabilities:
                - null
                - null
                fixVersion: fixVersion
                version: version
              patchAvailable: true
              cvssInfo:
                temporalScore: temporalScore
                baseScore: baseScore
                accessVector: accessVector
              supportedBy:
              - supportedBy
              - supportedBy
              source: source
              title: title
              qid: 6
              result: result
              lastFound: lastFound
              typeDetected: typeDetected
              cvss3Info:
                temporalScore: temporalScore
                baseScore: baseScore
              vendor:
              - vendor
              - vendor
              authType:
              - authType
              - authType
              discoveryType:
              - discoveryType
              - discoveryType
              severity: 5
              product:
              - product
              - product
              published: 0
              vulnerability: 5
              containerResult: containerResult
              threatIntel:
                publicExploit: true
                denialOfService: true
                easyExploit: true
                malware: true
                highDataLoss: true
                highLateralMovement: true
                noPatch: true
                exploitKit: true
                malwareNames:
                - malwareNames
                - malwareNames
                exploitKitNames:
                - exploitKitNames
                - exploitKitNames
                activeAttacks: true
                publicExploitNames:
                - publicExploitNames
                - publicExploitNames
                zeroDay: true
              port: port
              cveids:
              - cveids
              - cveids
              customerSeverity: customerSeverity
              imageResult: imageResult
              firstFound: firstFound
              risk: 1
              category: category
              status: status
            - software:
              - name: name
                vulnerabilities:
                - null
                - null
                fixVersion: fixVersion
                version: version
              - name: name
                vulnerabilities:
                - null
                - null
                fixVersion: fixVersion
                version: version
              patchAvailable: true
              cvssInfo:
                temporalScore: temporalScore
                baseScore: baseScore
                accessVector: accessVector
              supportedBy:
              - supportedBy
              - supportedBy
              source: source
              title: title
              qid: 6
              result: result
              lastFound: lastFound
              typeDetected: typeDetected
              cvss3Info:
                temporalScore: temporalScore
                baseScore: baseScore
              vendor:
              - vendor
              - vendor
              authType:
              - authType
              - authType
              discoveryType:
              - discoveryType
              - discoveryType
              severity: 5
              product:
              - product
              - product
              published: 0
              vulnerability: 5
              containerResult: containerResult
              threatIntel:
                publicExploit: true
                denialOfService: true
                easyExploit: true
                malware: true
                highDataLoss: true
                highLateralMovement: true
                noPatch: true
                exploitKit: true
                malwareNames:
                - malwareNames
                - malwareNames
                exploitKitNames:
                - exploitKitNames
                - exploitKitNames
                activeAttacks: true
                publicExploitNames:
                - publicExploitNames
                - publicExploitNames
                zeroDay: true
              port: port
              cveids:
              - cveids
              - cveids
              customerSeverity: customerSeverity
              imageResult: imageResult
              firstFound: firstFound
              risk: 1
              category: category
              status: status
            source: source
            fixVersion: fixVersion
            version: version
          vulnerability:
          - null
          - null
          category:
          - category
          - category
        imageId: imageId
        softwares:
        - name: name
          vulnerabilities:
          - null
          - null
          fixVersion: fixVersion
          version: version
        - name: name
          vulnerabilities:
          - null
          - null
          fixVersion: fixVersion
          version: version
        created: created
        label:
        - value: value
          key: key
        - value: value
          key: key
        services:
        - name: name
          description: description
          status: status
        - name: name
          description: description
          status: status
        sha: sha
        command: command
        users:
        - users
        - users
        privileged: true
        environment:
        - environment
        - environment
        macAddress: macAddress
        name: name
        vulnerabilities:
        - null
        - null
        arguments:
        - arguments
        - arguments
        stateChanged: stateChanged
    CvssInfo:
      type: object
      properties:
        accessVector:
          type: string
        baseScore:
          type: string
        temporalScore:
          type: string
      example:
        temporalScore: temporalScore
        baseScore: baseScore
        accessVector: accessVector
    Cvss3Info:
      type: object
      properties:
        baseScore:
          type: string
        temporalScore:
          type: string
      example:
        temporalScore: temporalScore
        baseScore: baseScore
    Software:
      type: object
      properties:
        fixVersion:
          type: string
        name:
          type: string
        version:
          type: string
        vulnerabilities:
          type: array
          items:
            $ref: '#/components/schemas/Vulnerability'
      example:
        name: name
        vulnerabilities:
        - null
        - null
        fixVersion: fixVersion
        version: version
    ThreatIntel:
      type: object
      properties:
        activeAttacks:
          type: boolean
        denialOfService:
          type: boolean
        easyExploit:
          type: boolean
        exploitKit:
          type: boolean
        exploitKitNames:
          type: array
          items:
            type: string
        highDataLoss:
          type: boolean
        highLateralMovement:
          type: boolean
        malware:
          type: boolean
        malwareNames:
          type: array
          items:
            type: string
        noPatch:
          type: boolean
        publicExploit:
          type: boolean
        publicExploitNames:
          type: array
          items:
            type: string
        zeroDay:
          type: boolean
      example:
        publicExploit: true
        denialOfService: true
        easyExploit: true
        malware: true
        highDataLoss: true
        highLateralMovement: true
        noPatch: true
        exploitKit: true
        malwareNames:
        - malwareNames
        - malwareNames
        exploitKitNames:
        - exploitKitNames
        - exploitKitNames
        activeAttacks: true
        publicExploitNames:
        - publicExploitNames
        - publicExploitNames
        zeroDay: true
    Vulnerability:
      type: object
      properties:
        authType:
          type: array
          items:
            type: string
        category:
          type: string
        containerResult:
          type: string
        customerSeverity:
          type: string
        cveids:
          type: array
          items:
            type: string
        cvss3Info:
          $ref: '#/components/schemas/Cvss3Info'
        cvssInfo:
          $ref: '#/components/schemas/CvssInfo'
        discoveryType:
          type: array
          items:
            type: string
        firstFound:
          type: string
        imageResult:
          type: string
        lastFound:
          type: string
        patchAvailable:
          type: boolean
        port:
          type: string
        product:
          type: array
          items:
            type: string
        published:
          type: integer
        qid:
          type: integer
        result:
          type: string
        risk:
          type: integer
        severity:
          type: integer
        software:
          type: array
          items:
            $ref: '#/components/schemas/Software'
        source:
          type: string
        status:
          type: string
        supportedBy:
          type: array
          items:
            type: string
        threatIntel:
          $ref: '#/components/schemas/ThreatIntel'
        title:
          type: string
        typeDetected:
          type: string
        vendor:
          type: array
          items:
            type: string
        vulnerability:
          type: integer
      example:
        software:
        - name: name
          vulnerabilities:
          - null
          - null
          fixVersion: fixVersion
          version: version
        - name: name
          vulnerabilities:
          - null
          - null
          fixVersion: fixVersion
          version: version
        patchAvailable: true
        cvssInfo:
          temporalScore: temporalScore
          baseScore: baseScore
          accessVector: accessVector
        supportedBy:
        - supportedBy
        - supportedBy
        source: source
        title: title
        qid: 6
        result: result
        lastFound: lastFound
        typeDetected: typeDetected
        cvss3Info:
          temporalScore: temporalScore
          baseScore: baseScore
        vendor:
        - vendor
        - vendor
        authType:
        - authType
        - authType
        discoveryType:
        - discoveryType
        - discoveryType
        severity: 5
        product:
        - product
        - product
        published: 0
        vulnerability: 5
        containerResult: containerResult
        threatIntel:
          publicExploit: true
          denialOfService: true
          easyExploit: true
          malware: true
          highDataLoss: true
          highLateralMovement: true
          noPatch: true
          exploitKit: true
          malwareNames:
          - malwareNames
          - malwareNames
          exploitKitNames:
          - exploitKitNames
          - exploitKitNames
          activeAttacks: true
          publicExploitNames:
          - publicExploitNames
          - publicExploitNames
          zeroDay: true
        port: port
        cveids:
        - cveids
        - cveids
        customerSeverity: customerSeverity
        imageResult: imageResult
        firstFound: firstFound
        risk: 1
        category: category
        status: status
    PortMapping:
      type: object
      properties:
        hostIp:
          type: string
        hostPort:
          type: integer
        port:
          type: integer
        protocol:
          type: string
      example:
        protocol: protocol
        hostIp: hostIp
        port: 7
        hostPort: 2
    Images:
      type: object
      properties:
        count:
          type: integer
        data:
          type: array
          items:
            $ref: '#/components/schemas/Image'
      example:
        data:
        - instrumentedFrom: instrumentedFrom
          imageId: imageId
          isDockerHubOfficial: true
          created: created
          author: author
          repo:
          - registry: registry
            tag: tag
            repository: repository
          - registry: registry
            tag: tag
            repository: repository
          scanStatus: scanStatus
          source:
          - source
          - source
          scanErrorCode: scanErrorCode
          uuid: uuid
          repoDigests:
          - registry: registry
            digest: digest
            repository: repository
          - registry: registry
            digest: digest
            repository: repository
          instrumentationState: QUEUED
          lastScanned: lastScanned
          registryUuid:
          - registryUuid
          - registryUuid
          associatedContainersCount: 6
          isInstrumented: true
          size: size
          vulnerabilities: {}
          scanType: scanType
          updated: updated
          associatedHostsCount: 1
          lastFoundOnHost:
            sensorUuid: sensorUuid
            hostname: hostname
            ipAddress: ipAddress
            uuid: uuid
        - instrumentedFrom: instrumentedFrom
          imageId: imageId
          isDockerHubOfficial: true
          created: created
          author: author
          repo:
          - registry: registry
            tag: tag
            repository: repository
          - registry: registry
            tag: tag
            repository: repository
          scanStatus: scanStatus
          source:
          - source
          - source
          scanErrorCode: scanErrorCode
          uuid: uuid
          repoDigests:
          - registry: registry
            digest: digest
            repository: repository
          - registry: registry
            digest: digest
            repository: repository
          instrumentationState: QUEUED
          lastScanned: lastScanned
          registryUuid:
          - registryUuid
          - registryUuid
          associatedContainersCount: 6
          isInstrumented: true
          size: size
          vulnerabilities: {}
          scanType: scanType
          updated: updated
          associatedHostsCount: 1
          lastFoundOnHost:
            sensorUuid: sensorUuid
            hostname: hostname
            ipAddress: ipAddress
            uuid: uuid
        count: 0
    Repo:
      type: object
      properties:
        registry:
          type: string
        repository:
          type: string
        tag:
          type: string
      example:
        registry: registry
        tag: tag
        repository: repository
    RepoDigest:
      type: object
      properties:
        registry:
          type: string
        repository:
          type: string
        digest:
          type: string
      example:
        registry: registry
        digest: digest
        repository: repository
    BulkImageDetailsList:
      type: object
      properties:
        limit:
          type: integer
        data:
          type: array
          items:
            $ref: '#/components/schemas/BulkImageDetails'
      example:
        data:
        - instrumentedFrom: instrumentedFrom
          isDockerHubOfficial: true
          repo:
          - registry: registry
            tag: tag
            repository: repository
          - registry: registry
            tag: tag
            repository: repository
          source:
          - source
          - source
          uuid: uuid
          operatingSystem: operatingSystem
          repoDigests:
          - registry: registry
            digest: digest
            repository: repository
          - registry: registry
            digest: digest
            repository: repository
          lastScanned: lastScanned
          registryUuid:
          - registryUuid
          - registryUuid
          customerUuid: customerUuid
          isInstrumented: true
          dockerVersion: dockerVersion
          layers:
          - size: size
            createdBy: createdBy
            created: created
            comment: comment
            id: id
            sha: sha
            tags:
            - tags
            - tags
          - size: size
            createdBy: createdBy
            created: created
            comment: comment
            id: id
            sha: sha
            tags:
            - tags
            - tags
          architecture: architecture
          lastFoundOnHost:
            sensorUuid: sensorUuid
            hostname: hostname
            ipAddress: ipAddress
            uuid: uuid
          imageId: imageId
          softwares: {}
          created: created
          author: author
          label:
          - value: value
            key: key
          - value: value
            key: key
          sha: sha
          users:
          - users
          - users
          instrumentationState: QUEUED
          size: 6
          vulnerabilities: {}
          scanType: scanType
          updated: updated
        - instrumentedFrom: instrumentedFrom
          isDockerHubOfficial: true
          repo:
          - registry: registry
            tag: tag
            repository: repository
          - registry: registry
            tag: tag
            repository: repository
          source:
          - source
          - source
          uuid: uuid
          operatingSystem: operatingSystem
          repoDigests:
          - registry: registry
            digest: digest
            repository: repository
          - registry: registry
            digest: digest
            repository: repository
          lastScanned: lastScanned
          registryUuid:
          - registryUuid
          - registryUuid
          customerUuid: customerUuid
          isInstrumented: true
          dockerVersion: dockerVersion
          layers:
          - size: size
            createdBy: createdBy
            created: created
            comment: comment
            id: id
            sha: sha
            tags:
            - tags
            - tags
          - size: size
            createdBy: createdBy
            created: created
            comment: comment
            id: id
            sha: sha
            tags:
            - tags
            - tags
          architecture: architecture
          lastFoundOnHost:
            sensorUuid: sensorUuid
            hostname: hostname
            ipAddress: ipAddress
            uuid: uuid
          imageId: imageId
          softwares: {}
          created: created
          author: author
          label:
          - value: value
            key: key
          - value: value
            key: key
          sha: sha
          users:
          - users
          - users
          instrumentationState: QUEUED
          size: 6
          vulnerabilities: {}
          scanType: scanType
          updated: updated
        limit: 0
    BulkImageDetails:
      type: object
      properties:
        created:
          type: string
        updated:
          type: string
        author:
          type: string
        repo:
          type: array
          items:
            $ref: '#/components/schemas/Repo'
        repoDigests:
          type: array
          items:
            $ref: '#/components/schemas/RepoDigest'
        label:
          type: array
          items:
            $ref: '#/components/schemas/BulkContainerDetails_label'
        uuid:
          type: string
        sha:
          type: string
        operatingSystem:
          type: string
        customerUuid:
          type: string
        imageId:
          type: string
        dockerVersion:
          type: string
        size:
          type: integer
        layers:
          type: array
          items:
            $ref: '#/components/schemas/Layer'
        architecture:
          type: string
        lastScanned:
          type: string
        registryUuid:
          type: array
          items:
            type: string
        source:
          type: array
          items:
            type: string
        users:
          type: array
          items:
            type: string
        lastFoundOnHost:
          $ref: '#/components/schemas/Host'
        isDockerHubOfficial:
          type: boolean
        isInstrumented:
          type: boolean
        instrumentedFrom:
          type: string
        instrumentationState:
          type: string
          example: QUEUED
        scanType:
          type: string
        softwares:
          type: object
          properties: {}
          example: {}
        vulnerabilities:
          type: object
          properties: {}
          example: {}
      example:
        instrumentedFrom: instrumentedFrom
        isDockerHubOfficial: true
        repo:
        - registry: registry
          tag: tag
          repository: repository
        - registry: registry
          tag: tag
          repository: repository
        source:
        - source
        - source
        uuid: uuid
        operatingSystem: operatingSystem
        repoDigests:
        - registry: registry
          digest: digest
          repository: repository
        - registry: registry
          digest: digest
          repository: repository
        lastScanned: lastScanned
        registryUuid:
        - registryUuid
        - registryUuid
        customerUuid: customerUuid
        isInstrumented: true
        dockerVersion: dockerVersion
        layers:
        - size: size
          createdBy: createdBy
          created: created
          comment: comment
          id: id
          sha: sha
          tags:
          - tags
          - tags
        - size: size
          createdBy: createdBy
          created: created
          comment: comment
          id: id
          sha: sha
          tags:
          - tags
          - tags
        architecture: architecture
        lastFoundOnHost:
          sensorUuid: sensorUuid
          hostname: hostname
          ipAddress: ipAddress
          uuid: uuid
        imageId: imageId
        softwares: {}
        created: created
        author: author
        label:
        - value: value
          key: key
        - value: value
          key: key
        sha: sha
        users:
        - users
        - users
        instrumentationState: QUEUED
        size: 6
        vulnerabilities: {}
        scanType: scanType
        updated: updated
    Image:
      type: object
      properties:
        created:
          type: string
        updated:
          type: string
        author:
          type: string
        repo:
          type: array
          items:
            $ref: '#/components/schemas/Repo'
        repoDigests:
          type: array
          items:
            $ref: '#/components/schemas/RepoDigest'
        uuid:
          type: string
        size:
          type: string
        vulnerabilities:
          type: object
          properties: {}
          example: {}
        imageId:
          type: string
        associatedContainersCount:
          type: integer
        associatedHostsCount:
          type: integer
        lastScanned:
          type: string
        registryUuid:
          type: array
          items:
            type: string
        source:
          type: array
          items:
            type: string
        isDockerHubOfficial:
          type: boolean
        isInstrumented:
          type: boolean
        instrumentedFrom:
          type: string
        instrumentationState:
          type: string
          example: QUEUED
        scanType:
          type: string
        scanErrorCode:
          type: string
        scanStatus:
          type: string
        lastFoundOnHost:
          $ref: '#/components/schemas/Host'
      example:
        instrumentedFrom: instrumentedFrom
        imageId: imageId
        isDockerHubOfficial: true
        created: created
        author: author
        repo:
        - registry: registry
          tag: tag
          repository: repository
        - registry: registry
          tag: tag
          repository: repository
        scanStatus: scanStatus
        source:
        - source
        - source
        scanErrorCode: scanErrorCode
        uuid: uuid
        repoDigests:
        - registry: registry
          digest: digest
          repository: repository
        - registry: registry
          digest: digest
          repository: repository
        instrumentationState: QUEUED
        lastScanned: lastScanned
        registryUuid:
        - registryUuid
        - registryUuid
        associatedContainersCount: 6
        isInstrumented: true
        size: size
        vulnerabilities: {}
        scanType: scanType
        updated: updated
        associatedHostsCount: 1
        lastFoundOnHost:
          sensorUuid: sensorUuid
          hostname: hostname
          ipAddress: ipAddress
          uuid: uuid
    ImageDetails:
      type: object
      properties:
        created:
          type: string
        updated:
          type: string
        author:
          type: string
        repo:
          type: array
          items:
            $ref: '#/components/schemas/Repo'
        repoDigests:
          type: array
          items:
            $ref: '#/components/schemas/RepoDigest'
        label:
          type: array
          items:
            $ref: '#/components/schemas/BulkContainerDetails_label'
        uuid:
          type: string
        sha:
          type: string
        operatingSystem:
          type: string
        customerUuid:
          type: string
        dockerVersion:
          type: string
        size:
          type: integer
        layers:
          type: array
          items:
            $ref: '#/components/schemas/Layer'
        host:
          type: array
          items:
            $ref: '#/components/schemas/Host'
        architecture:
          type: string
        imageId:
          type: string
        registryUuid:
          type: array
          items:
            type: string
        source:
          type: array
          items:
            type: string
        totalVulnCount:
          type: integer
        users:
          type: array
          items:
            type: string
        instrumentationState:
          type: string
          example: QUEUED
        instrumentedFrom:
          type: string
        isDockerHubOfficial:
          type: boolean
        isInstrumented:
          type: boolean
        scanType:
          type: string
        scanErrorCode:
          type: string
        scanStatus:
          type: string
        lastFoundOnHost:
          $ref: '#/components/schemas/Host'
      example:
        instrumentedFrom: instrumentedFrom
        isDockerHubOfficial: true
        repo:
        - registry: registry
          tag: tag
          repository: repository
        - registry: registry
          tag: tag
          repository: repository
        source:
        - source
        - source
        scanErrorCode: scanErrorCode
        uuid: uuid
        operatingSystem: operatingSystem
        repoDigests:
        - registry: registry
          digest: digest
          repository: repository
        - registry: registry
          digest: digest
          repository: repository
        registryUuid:
        - registryUuid
        - registryUuid
        customerUuid: customerUuid
        isInstrumented: true
        dockerVersion: dockerVersion
        layers:
        - size: size
          createdBy: createdBy
          created: created
          comment: comment
          id: id
          sha: sha
          tags:
          - tags
          - tags
        - size: size
          createdBy: createdBy
          created: created
          comment: comment
          id: id
          sha: sha
          tags:
          - tags
          - tags
        host:
        - sensorUuid: sensorUuid
          hostname: hostname
          ipAddress: ipAddress
          uuid: uuid
        - sensorUuid: sensorUuid
          hostname: hostname
          ipAddress: ipAddress
          uuid: uuid
        architecture: architecture
        lastFoundOnHost: null
        imageId: imageId
        created: created
        author: author
        scanStatus: scanStatus
        label:
        - value: value
          key: key
        - value: value
          key: key
        sha: sha
        users:
        - users
        - users
        instrumentationState: QUEUED
        size: 0
        totalVulnCount: 6
        scanType: scanType
        updated: updated
    Layer:
      type: object
      properties:
        comment:
          type: string
        created:
          type: string
        createdBy:
          type: string
        id:
          type: string
        sha:
          type: string
        size:
          type: string
        tags:
          type: array
          items:
            type: string
      example:
        size: size
        createdBy: createdBy
        created: created
        comment: comment
        id: id
        sha: sha
        tags:
        - tags
        - tags
    ImageAssociation:
      type: object
      properties:
        containers:
          type: array
          items:
            $ref: '#/components/schemas/Container'
        driftContainers:
          type: array
          items:
            $ref: '#/components/schemas/Container'
        hosts:
          type: array
          items:
            $ref: '#/components/schemas/ImageAssociation_hosts'
      example:
        driftContainers:
        - null
        - null
        hosts:
        - stoppedContainerCountForAssociatedImage: 9
          createdContainerCountForAssociatedImage: 6
          sensorUuid: sensorUuid
          hostname: hostname
          runningContainerCountForAssociatedImage: 2
          stoppedContainerCount: 7
          ipAddress: ipAddress
          pausedContainerCount: 1
          runningContainerCount: 5
          createdContainerCount: 0
          uuid: uuid
          pausedContainerCountForAssociatedImage: 5
        - stoppedContainerCountForAssociatedImage: 9
          createdContainerCountForAssociatedImage: 6
          sensorUuid: sensorUuid
          hostname: hostname
          runningContainerCountForAssociatedImage: 2
          stoppedContainerCount: 7
          ipAddress: ipAddress
          pausedContainerCount: 1
          runningContainerCount: 5
          createdContainerCount: 0
          uuid: uuid
          pausedContainerCountForAssociatedImage: 5
        containers:
        - imageId: imageId
          isRoot: true
          created: created
          sha: sha
          lastScanned: lastScanned
          isInstrumented: true
          name: name
          host:
            sensorUuid: sensorUuid
            hostname: hostname
            ipAddress: ipAddress
            uuid: uuid
          vulnerabilities: {}
          state: state
          containerId: containerId
          stateChanged: stateChanged
          updated: updated
          imageUuid: imageUuid
        - imageId: imageId
          isRoot: true
          created: created
          sha: sha
          lastScanned: lastScanned
          isInstrumented: true
          name: name
          host:
            sensorUuid: sensorUuid
            hostname: hostname
            ipAddress: ipAddress
            uuid: uuid
          vulnerabilities: {}
          state: state
          containerId: containerId
          stateChanged: stateChanged
          updated: updated
          imageUuid: imageUuid
    ImageRegistries:
      type: array
      items:
        $ref: '#/components/schemas/ImageRegistries_inner'
      x-schema-name: ImageRegistries
    InstrumentRequest:
      type: object
      properties:
        imageId:
          type: string
        pullRegistryUuid:
          type: string
        pullRepository:
          type: string
        pullTag:
          type: string
        pushRepository:
          type: string
        pushTag:
          type: string
    ImageSoftware:
      type: object
      properties:
        count:
          type: integer
        data:
          type: array
          items:
            $ref: '#/components/schemas/Software'
        driftSoftwareCountByDriftReason:
          type: object
          properties: {}
          example: {}
        driftSoftwareCountBySeverity:
          type: object
          properties: {}
          example: {}
        softwareCountBySeverity:
          type: object
          properties: {}
          example: {}
      example:
        driftSoftwareCountByDriftReason: {}
        data:
        - name: name
          vulnerabilities:
          - null
          - null
          fixVersion: fixVersion
          version: version
        - name: name
          vulnerabilities:
          - null
          - null
          fixVersion: fixVersion
          version: version
        count: 0
        softwareCountBySeverity: {}
        driftSoftwareCountBySeverity: {}
    ImageVulnerability:
      type: object
      properties:
        details:
          $ref: '#/components/schemas/Vulnerability'
        vulnSummary:
          $ref: '#/components/schemas/ImageVulnerability_vulnSummary'
      example:
        details:
          software:
          - name: name
            vulnerabilities:
            - null
            - null
            fixVersion: fixVersion
            version: version
          - name: name
            vulnerabilities:
            - null
            - null
            fixVersion: fixVersion
            version: version
          patchAvailable: true
          cvssInfo:
            temporalScore: temporalScore
            baseScore: baseScore
            accessVector: accessVector
          supportedBy:
          - supportedBy
          - supportedBy
          source: source
          title: title
          qid: 6
          result: result
          lastFound: lastFound
          typeDetected: typeDetected
          cvss3Info:
            temporalScore: temporalScore
            baseScore: baseScore
          vendor:
          - vendor
          - vendor
          authType:
          - authType
          - authType
          discoveryType:
          - discoveryType
          - discoveryType
          severity: 5
          product:
          - product
          - product
          published: 0
          vulnerability: 5
          containerResult: containerResult
          threatIntel:
            publicExploit: true
            denialOfService: true
            easyExploit: true
            malware: true
            highDataLoss: true
            highLateralMovement: true
            noPatch: true
            exploitKit: true
            malwareNames:
            - malwareNames
            - malwareNames
            exploitKitNames:
            - exploitKitNames
            - exploitKitNames
            activeAttacks: true
            publicExploitNames:
            - publicExploitNames
            - publicExploitNames
            zeroDay: true
          port: port
          cveids:
          - cveids
          - cveids
          customerSeverity: customerSeverity
          imageResult: imageResult
          firstFound: firstFound
          risk: 1
          category: category
          status: status
        vulnSummary:
          confirmed: {}
          potential: {}
          patchAvailability:
            confirmed: {}
            potential: {}
    PolicyComplianceDetails:
      type: object
      properties:
        customerUuid:
          type: string
        uuid:
          type: string
        sha:
          type: string
        created:
          type: string
        updated:
          type: string
        controls:
          type: array
          items:
            $ref: '#/components/schemas/ControlDetails'
        lastComplianceScanned:
          type: string
      example:
        lastComplianceScanned: lastComplianceScanned
        customerUuid: customerUuid
        controls:
        - policyUuid: policyUuid
          datapoints:
          - value: value
            key: key
          - value: value
            key: key
          posture: posture
          criticality: criticality
          lastEvaluated: lastEvaluated
          controlId: 0
          technologyId: 6
        - policyUuid: policyUuid
          datapoints:
          - value: value
            key: key
          - value: value
            key: key
          posture: posture
          criticality: criticality
          lastEvaluated: lastEvaluated
          controlId: 0
          technologyId: 6
        created: created
        uuid: uuid
        sha: sha
        updated: updated
    Registries:
      type: object
      properties:
        count:
          type: integer
        data:
          type: array
          items:
            $ref: '#/components/schemas/Registry'
      example:
        data:
        - awsRegion: awsRegion
          awsAccountId: awsAccountId
          repoCount: 6
          created: created
          dockerHubOrg: dockerHubOrg
          totalVulnerableImages: 5
          providerType: DockerHub
          lastScanned: lastScanned
          registryType: V2_PRIVATE
          registryUuid: registryUuid
          totalImages: 1
          scheduleStatusList: {}
          totalScannedImages: 5
          registryUri: registryUri
          updated: updated
        - awsRegion: awsRegion
          awsAccountId: awsAccountId
          repoCount: 6
          created: created
          dockerHubOrg: dockerHubOrg
          totalVulnerableImages: 5
          providerType: DockerHub
          lastScanned: lastScanned
          registryType: V2_PRIVATE
          registryUuid: registryUuid
          totalImages: 1
          scheduleStatusList: {}
          totalScannedImages: 5
          registryUri: registryUri
          updated: updated
        count: 0
    Registry:
      type: object
      properties:
        awsAccountId:
          type: string
        awsRegion:
          type: string
        created:
          type: string
        dockerHubOrg:
          type: string
        lastScanned:
          type: string
        providerType:
          type: string
          example: DockerHub
        registryType:
          type: string
          example: V2_PRIVATE
        registryUri:
          type: string
        registryUuid:
          type: string
        repoCount:
          type: integer
        scheduleStatusList:
          type: object
          properties: {}
          example: {}
        totalImages:
          type: integer
        totalScannedImages:
          type: integer
        totalVulnerableImages:
          type: integer
        updated:
          type: string
      example:
        awsRegion: awsRegion
        awsAccountId: awsAccountId
        repoCount: 6
        created: created
        dockerHubOrg: dockerHubOrg
        totalVulnerableImages: 5
        providerType: DockerHub
        lastScanned: lastScanned
        registryType: V2_PRIVATE
        registryUuid: registryUuid
        totalImages: 1
        scheduleStatusList: {}
        totalScannedImages: 5
        registryUri: registryUri
        updated: updated
    AcrConnector:
      type: object
      properties:
        name:
          type: string
        acrConnectorId:
          type: string
        description:
          type: string
      example:
        acrConnectorId: acrConnectorId
        name: name
        description: description
    AwsConnector:
      type: object
      properties:
        name:
          type: string
        arn:
          type: string
        description:
          type: string
      example:
        name: name
        description: description
        arn: arn
    GcpConnector:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        location:
          type: string
        gcpConnectorId:
          type: string
        gcpProjectId:
          type: string
      example:
        gcpConnectorId: gcpConnectorId
        name: name
        gcpProjectId: gcpProjectId
        description: description
        location: location
    RegistryRequest:
      type: object
      properties:
        aws:
          $ref: '#/components/schemas/AwsConnector'
        credential:
          $ref: '#/components/schemas/RegistryRequest_credential'
        credentialType:
          type: string
          example: None
        dockerHubOrgName:
          type: string
        registryType:
          type: string
          example: V2_PRIVATE
        registryUri:
          type: string
        registryUuid:
          type: string
    AwsAccount:
      type: object
      properties:
        accountId:
          type: string
        externalId:
          type: integer
      example:
        accountId: accountId
        externalId: 0
    AwsConnectorRequest:
      type: object
      properties:
        arn:
          type: string
        description:
          type: string
        externalId:
          type: string
        name:
          type: string
    AcrConnectorRequest:
      type: object
      properties:
        name:
          type: string
        clientSecret:
          type: string
        connectorId:
          type: string
        description:
          type: string
        applicationId:
          type: string
    GcpConnectorRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        gcpProjectId:
          type: string
        gcpConnectorId:
          type: string
        location:
          type: string
    RegistryDetails:
      type: object
      properties:
        aws:
          $ref: '#/components/schemas/RegistryDetails_aws'
        connectors:
          type: array
          items:
            $ref: '#/components/schemas/RegistryDetails_connectors'
        created:
          type: string
        credential:
          $ref: '#/components/schemas/RegistryDetails_credential'
        dockerHubOrg:
          type: string
        lastScanned:
          type: string
        providerType:
          type: string
          example: DockerHub
        registryType:
          type: string
          example: V2_PRIVATE
        registryUri:
          type: string
        registryUuid:
          type: string
        repoCount:
          type: integer
        scheduleStatusList:
          type: object
          properties: {}
          example: {}
        totalImages:
          type: integer
        totalScannedImages:
          type: integer
        totalVulnerableImages:
          type: integer
        updated:
          type: string
      example:
        connectors:
        - name: name
          description: description
          arn: arn
        - name: name
          description: description
          arn: arn
        repoCount: 0
        created: created
        dockerHubOrg: dockerHubOrg
        totalVulnerableImages: 5
        providerType: DockerHub
        lastScanned: lastScanned
        registryType: V2_PRIVATE
        registryUuid: registryUuid
        totalImages: 6
        scheduleStatusList: {}
        credential:
          username: username
        totalScannedImages: 1
        aws:
          accountId: accountId
          name: name
          description: description
          arn: arn
          region: region
        registryUri: registryUri
        updated: updated
    Repositories:
      type: object
      properties:
        count:
          type: integer
        data:
          type: array
          items:
            $ref: '#/components/schemas/Repository'
      example:
        data:
        - totalImages: 6
          repoName: repoName
          totalVulnerableImages: 5
          totalScannedImages: 1
        - totalImages: 6
          repoName: repoName
          totalVulnerableImages: 5
          totalScannedImages: 1
        count: 0
    Repository:
      type: object
      properties:
        repoName:
          type: string
        totalImages:
          type: integer
        totalScannedImages:
          type: integer
        totalVulnerableImages:
          type: integer
      example:
        totalImages: 6
        repoName: repoName
        totalVulnerableImages: 5
        totalScannedImages: 1
    Schedules:
      type: object
      properties:
        count:
          type: integer
        data:
          type: array
          items:
            $ref: '#/components/schemas/Schedule'
      example:
        data:
        - jobScanningStartDate: jobScanningStartDate
          jobScanningCompletionDate: jobScanningCompletionDate
          created: created
          jobListingStartDate: jobListingStartDate
          jobStartDate: jobStartDate
          filters:
          - repoTags:
            - repo: repo
              tag: tag
            - repo: repo
              tag: tag
            days: 6
          - repoTags:
            - repo: repo
              tag: tag
            - repo: repo
              tag: tag
            days: 6
          jobCompletionDate: jobCompletionDate
          jobListingCompletionDate: jobListingCompletionDate
          onDemand: true
          schedule: schedule
          scheduleUuid: scheduleUuid
          name: name
          updated: updated
          errors:
          - contextParams: {}
            errorMessage: errorMessage
            errorCode: errorCode
          - contextParams: {}
            errorMessage: errorMessage
            errorCode: errorCode
          status: status
        - jobScanningStartDate: jobScanningStartDate
          jobScanningCompletionDate: jobScanningCompletionDate
          created: created
          jobListingStartDate: jobListingStartDate
          jobStartDate: jobStartDate
          filters:
          - repoTags:
            - repo: repo
              tag: tag
            - repo: repo
              tag: tag
            days: 6
          - repoTags:
            - repo: repo
              tag: tag
            - repo: repo
              tag: tag
            days: 6
          jobCompletionDate: jobCompletionDate
          jobListingCompletionDate: jobListingCompletionDate
          onDemand: true
          schedule: schedule
          scheduleUuid: scheduleUuid
          name: name
          updated: updated
          errors:
          - contextParams: {}
            errorMessage: errorMessage
            errorCode: errorCode
          - contextParams: {}
            errorMessage: errorMessage
            errorCode: errorCode
          status: status
        count: 0
    Schedule:
      type: object
      properties:
        created:
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Schedule_errors'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/Schedule_filters'
        jobCompletionDate:
          type: string
        jobListingCompletionDate:
          type: string
        jobListingStartDate:
          type: string
        jobScanningCompletionDate:
          type: string
        jobScanningStartDate:
          type: string
        jobStartDate:
          type: string
        name:
          type: string
        onDemand:
          type: boolean
        schedule:
          type: string
        scheduleUuid:
          type: string
        status:
          type: string
        updated:
          type: string
      example:
        jobScanningStartDate: jobScanningStartDate
        jobScanningCompletionDate: jobScanningCompletionDate
        created: created
        jobListingStartDate: jobListingStartDate
        jobStartDate: jobStartDate
        filters:
        - repoTags:
          - repo: repo
            tag: tag
          - repo: repo
            tag: tag
          days: 6
        - repoTags:
          - repo: repo
            tag: tag
          - repo: repo
            tag: tag
          days: 6
        jobCompletionDate: jobCompletionDate
        jobListingCompletionDate: jobListingCompletionDate
        onDemand: true
        schedule: schedule
        scheduleUuid: scheduleUuid
        name: name
        updated: updated
        errors:
        - contextParams: {}
          errorMessage: errorMessage
          errorCode: errorCode
        - contextParams: {}
          errorMessage: errorMessage
          errorCode: errorCode
        status: status
    ScheduleRequest:
      type: object
      properties:
        filters:
          type: array
          items:
            $ref: '#/components/schemas/Schedule_filters'
        name:
          type: string
        onDemand:
          type: boolean
        schedule:
          type: string
    Cluster:
      type: object
      properties:
        type:
          type: string
          enum:
          - kubernetes
        version:
          type: string
        k8s:
          $ref: '#/components/schemas/Cluster_k8s'
      example:
        k8s:
          node:
            isMaster: true
            name: name
          pod:
            controller:
            - name: name
              type: type
              uuid: uuid
            - name: name
              type: type
              uuid: uuid
            name: name
            namespace: namespace
            label:
            - value: value
              key: key
            - value: value
              key: key
            uuid: uuid
          project: project
        type: kubernetes
        version: version
    Sensors:
      type: object
      properties:
        count:
          type: integer
        data:
          type: array
          items:
            $ref: '#/components/schemas/Sensor'
      example:
        data:
        - cluster:
            k8s:
              node:
                isMaster: true
                name: name
              pod:
                controller:
                - name: name
                  type: type
                  uuid: uuid
                - name: name
                  type: type
                  uuid: uuid
                name: name
                namespace: namespace
                label:
                - value: value
                  key: key
                - value: value
                  key: key
                uuid: uuid
              project: project
            type: kubernetes
            version: version
          uuid: uuid
          platform: platform
          sensorId: sensorId
          activationUuid: activationUuid
          hostname: hostname
          imageSha: imageSha
          customerUuid: customerUuid
          vulnSigVersion: vulnSigVersion
          dockerVersion: dockerVersion
          ipv4: ipv4
          hostUuid: hostUuid
          ipv6: ipv6
          sensorType: sensorType
          registry: registry
          imageId: imageId
          lastCheckedIn: lastCheckedIn
          binaryVersion: binaryVersion
          os: os
          created: created
          sensorVersion: sensorVersion
          label:
            value: value
            key: key
          sha: sha
          containerIpv6: containerIpv6
          privileged: privileged
          macAddress: macAddress
          name: name
          configurationProfile: configurationProfile
          containerMacAddress: containerMacAddress
          containerIpv4: containerIpv4
          status: status
        - cluster:
            k8s:
              node:
                isMaster: true
                name: name
              pod:
                controller:
                - name: name
                  type: type
                  uuid: uuid
                - name: name
                  type: type
                  uuid: uuid
                name: name
                namespace: namespace
                label:
                - value: value
                  key: key
                - value: value
                  key: key
                uuid: uuid
              project: project
            type: kubernetes
            version: version
          uuid: uuid
          platform: platform
          sensorId: sensorId
          activationUuid: activationUuid
          hostname: hostname
          imageSha: imageSha
          customerUuid: customerUuid
          vulnSigVersion: vulnSigVersion
          dockerVersion: dockerVersion
          ipv4: ipv4
          hostUuid: hostUuid
          ipv6: ipv6
          sensorType: sensorType
          registry: registry
          imageId: imageId
          lastCheckedIn: lastCheckedIn
          binaryVersion: binaryVersion
          os: os
          created: created
          sensorVersion: sensorVersion
          label:
            value: value
            key: key
          sha: sha
          containerIpv6: containerIpv6
          privileged: privileged
          macAddress: macAddress
          name: name
          configurationProfile: configurationProfile
          containerMacAddress: containerMacAddress
          containerIpv4: containerIpv4
          status: status
        count: 0
    Sensor:
      type: object
      properties:
        activationUuid:
          type: string
        binaryVersion:
          type: string
        configurationProfile:
          type: string
        containerIpv4:
          type: string
        containerIpv6:
          type: string
        containerMacAddress:
          type: string
        created:
          type: string
        customerUuid:
          type: string
        dockerVersion:
          type: string
        hostUuid:
          type: string
        hostname:
          type: string
        imageId:
          type: string
        imageSha:
          type: string
        ipv4:
          type: string
        ipv6:
          type: string
        label:
          $ref: '#/components/schemas/BulkContainerDetails_label'
        lastCheckedIn:
          type: string
        macAddress:
          type: string
        name:
          type: string
        os:
          type: string
        platform:
          type: string
        privileged:
          type: string
        registry:
          type: string
        sensorId:
          type: string
        sensorType:
          type: string
        sensorVersion:
          type: string
        sha:
          type: string
        status:
          type: string
        uuid:
          type: string
        vulnSigVersion:
          type: string
        cluster:
          $ref: '#/components/schemas/Cluster'
      example:
        cluster:
          k8s:
            node:
              isMaster: true
              name: name
            pod:
              controller:
              - name: name
                type: type
                uuid: uuid
              - name: name
                type: type
                uuid: uuid
              name: name
              namespace: namespace
              label:
              - value: value
                key: key
              - value: value
                key: key
              uuid: uuid
            project: project
          type: kubernetes
          version: version
        uuid: uuid
        platform: platform
        sensorId: sensorId
        activationUuid: activationUuid
        hostname: hostname
        imageSha: imageSha
        customerUuid: customerUuid
        vulnSigVersion: vulnSigVersion
        dockerVersion: dockerVersion
        ipv4: ipv4
        hostUuid: hostUuid
        ipv6: ipv6
        sensorType: sensorType
        registry: registry
        imageId: imageId
        lastCheckedIn: lastCheckedIn
        binaryVersion: binaryVersion
        os: os
        created: created
        sensorVersion: sensorVersion
        label:
          value: value
          key: key
        sha: sha
        containerIpv6: containerIpv6
        privileged: privileged
        macAddress: macAddress
        name: name
        configurationProfile: configurationProfile
        containerMacAddress: containerMacAddress
        containerIpv4: containerIpv4
        status: status
    Reports:
      type: object
      properties:
        count:
          type: integer
        data:
          type: array
          items:
            $ref: '#/components/schemas/Report'
      example:
        data:
        - reportUuid: reportUuid
          filter: filter
          reportType: ON_DEMAND
          createdAt: createdAt
          displayColumns:
          - repo
          - uuid
          - qid
          reportName: reportName
          templateName: templateName
          description: description
          fileFormat: fileFormat
          status: GENERATED
        - reportUuid: reportUuid
          filter: filter
          reportType: ON_DEMAND
          createdAt: createdAt
          displayColumns:
          - repo
          - uuid
          - qid
          reportName: reportName
          templateName: templateName
          description: description
          fileFormat: fileFormat
          status: GENERATED
        count: 0
    Report:
      type: object
      properties:
        createdAt:
          type: string
        description:
          type: string
        fileFormat:
          type: string
        reportUuid:
          type: string
        filter:
          type: string
        displayColumns:
          type: array
          description: Provide parameter values in the format shown under Example
            Value.
          example:
          - repo
          - uuid
          - qid
          items:
            type: string
        reportName:
          type: string
        reportType:
          type: string
          example: ON_DEMAND
        status:
          type: string
          example: GENERATED
        templateName:
          type: string
      example:
        reportUuid: reportUuid
        filter: filter
        reportType: ON_DEMAND
        createdAt: createdAt
        displayColumns:
        - repo
        - uuid
        - qid
        reportName: reportName
        templateName: templateName
        description: description
        fileFormat: fileFormat
        status: GENERATED
    ReportRequest:
      type: object
      properties:
        description:
          maxLength: 250
          type: string
        name:
          maxLength: 150
          type: string
        filter:
          type: string
        displayColumns:
          type: array
          description: Provide parameter values in the format shown under Example
            Value.
          example:
          - repo
          - uuid
          - qid
          items:
            type: string
        templateName:
          type: string
          example: CS_IMAGE_VULNERABILITY OR CS_CONTAINER_VULNERABILITY
    ReportsDeleteSucccess:
      type: object
      properties:
        message:
          type: string
        data:
          type: array
          items:
            type: string
      example:
        data:
        - data
        - data
        message: message
    ResponseError:
      type: object
      properties:
        errorCode:
          type: string
          example: string
        message:
          type: string
          example: string
        timestamp:
          type: number
          example: 0.0
    gcp_connector_body:
      type: object
      properties:
        serviceAccountJson:
          type: string
          format: binary
    ContainerVuln_details:
      type: object
      properties:
        driftVulns:
          type: array
          items:
            $ref: '#/components/schemas/Vulnerability'
        vulns:
          type: array
          items:
            $ref: '#/components/schemas/Vulnerability'
      example:
        vulns:
        - null
        - null
        driftVulns:
        - software:
          - name: name
            vulnerabilities:
            - null
            - null
            fixVersion: fixVersion
            version: version
          - name: name
            vulnerabilities:
            - null
            - null
            fixVersion: fixVersion
            version: version
          patchAvailable: true
          cvssInfo:
            temporalScore: temporalScore
            baseScore: baseScore
            accessVector: accessVector
          supportedBy:
          - supportedBy
          - supportedBy
          source: source
          title: title
          qid: 6
          result: result
          lastFound: lastFound
          typeDetected: typeDetected
          cvss3Info:
            temporalScore: temporalScore
            baseScore: baseScore
          vendor:
          - vendor
          - vendor
          authType:
          - authType
          - authType
          discoveryType:
          - discoveryType
          - discoveryType
          severity: 5
          product:
          - product
          - product
          published: 0
          vulnerability: 5
          containerResult: containerResult
          threatIntel:
            publicExploit: true
            denialOfService: true
            easyExploit: true
            malware: true
            highDataLoss: true
            highLateralMovement: true
            noPatch: true
            exploitKit: true
            malwareNames:
            - malwareNames
            - malwareNames
            exploitKitNames:
            - exploitKitNames
            - exploitKitNames
            activeAttacks: true
            publicExploitNames:
            - publicExploitNames
            - publicExploitNames
            zeroDay: true
          port: port
          cveids:
          - cveids
          - cveids
          customerSeverity: customerSeverity
          imageResult: imageResult
          firstFound: firstFound
          risk: 1
          category: category
          status: status
        - software:
          - name: name
            vulnerabilities:
            - null
            - null
            fixVersion: fixVersion
            version: version
          - name: name
            vulnerabilities:
            - null
            - null
            fixVersion: fixVersion
            version: version
          patchAvailable: true
          cvssInfo:
            temporalScore: temporalScore
            baseScore: baseScore
            accessVector: accessVector
          supportedBy:
          - supportedBy
          - supportedBy
          source: source
          title: title
          qid: 6
          result: result
          lastFound: lastFound
          typeDetected: typeDetected
          cvss3Info:
            temporalScore: temporalScore
            baseScore: baseScore
          vendor:
          - vendor
          - vendor
          authType:
          - authType
          - authType
          discoveryType:
          - discoveryType
          - discoveryType
          severity: 5
          product:
          - product
          - product
          published: 0
          vulnerability: 5
          containerResult: containerResult
          threatIntel:
            publicExploit: true
            denialOfService: true
            easyExploit: true
            malware: true
            highDataLoss: true
            highLateralMovement: true
            noPatch: true
            exploitKit: true
            malwareNames:
            - malwareNames
            - malwareNames
            exploitKitNames:
            - exploitKitNames
            - exploitKitNames
            activeAttacks: true
            publicExploitNames:
            - publicExploitNames
            - publicExploitNames
            zeroDay: true
          port: port
          cveids:
          - cveids
          - cveids
          customerSeverity: customerSeverity
          imageResult: imageResult
          firstFound: firstFound
          risk: 1
          category: category
          status: status
    VunlSummary_patchAvailability:
      type: object
      properties:
        confirmed:
          type: object
          properties: {}
          example: {}
        potential:
          type: object
          properties: {}
          example: {}
      example:
        confirmed: {}
        potential: {}
    BulkContainerDetails_label:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      example:
        value: value
        key: key
    Drift_software:
      type: object
      properties:
        fixVersion:
          type: string
        name:
          type: string
        reason:
          type: string
        source:
          type: string
        version:
          type: string
        vulnerabilities:
          type: array
          items:
            $ref: '#/components/schemas/Vulnerability'
      example:
        reason: reason
        name: name
        vulnerabilities:
        - software:
          - name: name
            vulnerabilities:
            - null
            - null
            fixVersion: fixVersion
            version: version
          - name: name
            vulnerabilities:
            - null
            - null
            fixVersion: fixVersion
            version: version
          patchAvailable: true
          cvssInfo:
            temporalScore: temporalScore
            baseScore: baseScore
            accessVector: accessVector
          supportedBy:
          - supportedBy
          - supportedBy
          source: source
          title: title
          qid: 6
          result: result
          lastFound: lastFound
          typeDetected: typeDetected
          cvss3Info:
            temporalScore: temporalScore
            baseScore: baseScore
          vendor:
          - vendor
          - vendor
          authType:
          - authType
          - authType
          discoveryType:
          - discoveryType
          - discoveryType
          severity: 5
          product:
          - product
          - product
          published: 0
          vulnerability: 5
          containerResult: containerResult
          threatIntel:
            publicExploit: true
            denialOfService: true
            easyExploit: true
            malware: true
            highDataLoss: true
            highLateralMovement: true
            noPatch: true
            exploitKit: true
            malwareNames:
            - malwareNames
            - malwareNames
            exploitKitNames:
            - exploitKitNames
            - exploitKitNames
            activeAttacks: true
            publicExploitNames:
            - publicExploitNames
            - publicExploitNames
            zeroDay: true
          port: port
          cveids:
          - cveids
          - cveids
          customerSeverity: customerSeverity
          imageResult: imageResult
          firstFound: firstFound
          risk: 1
          category: category
          status: status
        - software:
          - name: name
            vulnerabilities:
            - null
            - null
            fixVersion: fixVersion
            version: version
          - name: name
            vulnerabilities:
            - null
            - null
            fixVersion: fixVersion
            version: version
          patchAvailable: true
          cvssInfo:
            temporalScore: temporalScore
            baseScore: baseScore
            accessVector: accessVector
          supportedBy:
          - supportedBy
          - supportedBy
          source: source
          title: title
          qid: 6
          result: result
          lastFound: lastFound
          typeDetected: typeDetected
          cvss3Info:
            temporalScore: temporalScore
            baseScore: baseScore
          vendor:
          - vendor
          - vendor
          authType:
          - authType
          - authType
          discoveryType:
          - discoveryType
          - discoveryType
          severity: 5
          product:
          - product
          - product
          published: 0
          vulnerability: 5
          containerResult: containerResult
          threatIntel:
            publicExploit: true
            denialOfService: true
            easyExploit: true
            malware: true
            highDataLoss: true
            highLateralMovement: true
            noPatch: true
            exploitKit: true
            malwareNames:
            - malwareNames
            - malwareNames
            exploitKitNames:
            - exploitKitNames
            - exploitKitNames
            activeAttacks: true
            publicExploitNames:
            - publicExploitNames
            - publicExploitNames
            zeroDay: true
          port: port
          cveids:
          - cveids
          - cveids
          customerSeverity: customerSeverity
          imageResult: imageResult
          firstFound: firstFound
          risk: 1
          category: category
          status: status
        source: source
        fixVersion: fixVersion
        version: version
    ContainerDetails_services:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        status:
          type: string
      example:
        name: name
        description: description
        status: status
    ContainerDetails_softwares:
      type: object
      properties:
        fixVersion:
          type: string
        name:
          type: string
        version:
          type: string
        vulnerabilities:
          type: array
          items:
            $ref: '#/components/schemas/Vulnerability'
      example:
        name: name
        vulnerabilities:
        - null
        - null
        fixVersion: fixVersion
        version: version
    ImageAssociation_hosts:
      type: object
      properties:
        createdContainerCount:
          type: integer
        createdContainerCountForAssociatedImage:
          type: integer
        hostname:
          type: string
        ipAddress:
          type: string
        pausedContainerCount:
          type: integer
        pausedContainerCountForAssociatedImage:
          type: integer
        runningContainerCount:
          type: integer
        runningContainerCountForAssociatedImage:
          type: integer
        sensorUuid:
          type: string
        stoppedContainerCount:
          type: integer
        stoppedContainerCountForAssociatedImage:
          type: integer
        uuid:
          type: string
      example:
        stoppedContainerCountForAssociatedImage: 9
        createdContainerCountForAssociatedImage: 6
        sensorUuid: sensorUuid
        hostname: hostname
        runningContainerCountForAssociatedImage: 2
        stoppedContainerCount: 7
        ipAddress: ipAddress
        pausedContainerCount: 1
        runningContainerCount: 5
        createdContainerCount: 0
        uuid: uuid
        pausedContainerCountForAssociatedImage: 5
    ImageRegistries_inner:
      type: object
      properties:
        registry:
          type: string
        registryUuid:
          type: string
        repo:
          type: string
        tag:
          type: string
      example:
        registryUuid: registryUuid
        registry: registry
        repo: repo
        tag: tag
    ImageVulnerability_vulnSummary:
      type: object
      properties:
        confirmed:
          type: object
          properties: {}
          example: {}
        patchAvailability:
          $ref: '#/components/schemas/VunlSummary_patchAvailability'
        potential:
          type: object
          properties: {}
          example: {}
      example:
        confirmed: {}
        potential: {}
        patchAvailability:
          confirmed: {}
          potential: {}
    RegistryRequest_credential:
      type: object
      properties:
        password:
          type: string
        username:
          type: string
    RegistryDetails_aws:
      type: object
      properties:
        accountId:
          type: string
        arn:
          type: string
        description:
          type: string
        name:
          type: string
        region:
          type: string
      example:
        accountId: accountId
        name: name
        description: description
        arn: arn
        region: region
    RegistryDetails_connectors:
      type: object
      properties:
        arn:
          type: string
        description:
          type: string
        name:
          type: string
      example:
        name: name
        description: description
        arn: arn
    RegistryDetails_credential:
      type: object
      properties:
        username:
          type: string
      example:
        username: username
    Schedule_errors:
      type: object
      properties:
        contextParams:
          type: object
          properties: {}
          example: {}
        errorCode:
          type: string
        errorMessage:
          type: string
      example:
        contextParams: {}
        errorMessage: errorMessage
        errorCode: errorCode
    Schedule_repoTags:
      type: object
      properties:
        repo:
          type: string
        tag:
          type: string
      example:
        repo: repo
        tag: tag
    Schedule_filters:
      type: object
      properties:
        days:
          type: integer
        repoTags:
          type: array
          items:
            $ref: '#/components/schemas/Schedule_repoTags'
      example:
        repoTags:
        - repo: repo
          tag: tag
        - repo: repo
          tag: tag
        days: 6
    Cluster_k8s_pod_label:
      properties:
        key:
          type: string
        value:
          type: string
      example:
        value: value
        key: key
    Cluster_k8s_pod_controller:
      properties:
        name:
          type: string
        type:
          type: string
        uuid:
          type: string
      example:
        name: name
        type: type
        uuid: uuid
    Cluster_k8s_pod:
      type: object
      properties:
        name:
          type: string
        uuid:
          type: string
        namespace:
          type: string
        label:
          type: array
          items:
            $ref: '#/components/schemas/Cluster_k8s_pod_label'
        controller:
          type: array
          items:
            $ref: '#/components/schemas/Cluster_k8s_pod_controller'
      example:
        controller:
        - name: name
          type: type
          uuid: uuid
        - name: name
          type: type
          uuid: uuid
        name: name
        namespace: namespace
        label:
        - value: value
          key: key
        - value: value
          key: key
        uuid: uuid
    Cluster_k8s_node:
      type: object
      properties:
        name:
          type: string
        isMaster:
          type: boolean
      example:
        isMaster: true
        name: name
    Cluster_k8s:
      type: object
      properties:
        project:
          type: string
        pod:
          $ref: '#/components/schemas/Cluster_k8s_pod'
        node:
          $ref: '#/components/schemas/Cluster_k8s_node'
      example:
        node:
          isMaster: true
          name: name
        pod:
          controller:
          - name: name
            type: type
            uuid: uuid
          - name: name
            type: type
            uuid: uuid
          name: name
          namespace: namespace
          label:
          - value: value
            key: key
          - value: value
            key: key
          uuid: uuid
        project: project
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
