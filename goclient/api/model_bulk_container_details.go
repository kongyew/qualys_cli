/*
 * Container Security API
 *
 * # Authentication You must authenticate to the Qualys Cloud Platform using Qualys account credentials (user name and password) and get the JSON Web Token (JWT) before you can start using the Container Security APIs. Use the Qualys Authentication API to get the JWT.  **Example Authentication Curl Request**:  curl -X POST https://gateway/auth -H 'Content-Type: application/x-www-form-urlencoded' -d 'username=value1&password=passwordValue&token=true' where - gateway is the base URL to the Qualys API server where your account is located. - **username** and **password** are the credentials of the user account for which you want to fetch Container Security data. - **token** should be **true** - **Content-Type** should be **application/x-www-form-urlencoded** 
 *
 * API version: v1.3
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package api

type BulkContainerDetails struct {
	ImageId string `json:"imageId,omitempty"`
	Created string `json:"created,omitempty"`
	Updated string `json:"updated,omitempty"`
	Label []BulkContainerDetailsLabel `json:"label,omitempty"`
	Uuid string `json:"uuid,omitempty"`
	Sha string `json:"sha,omitempty"`
	Privileged bool `json:"privileged,omitempty"`
	Path string `json:"path,omitempty"`
	ImageSha string `json:"imageSha,omitempty"`
	MacAddress string `json:"macAddress,omitempty"`
	CustomerUuid string `json:"customerUuid,omitempty"`
	Ipv4 string `json:"ipv4,omitempty"`
	Ipv6 string `json:"ipv6,omitempty"`
	Name string `json:"name,omitempty"`
	Host *Host `json:"host,omitempty"`
	State string `json:"state,omitempty"`
	ImageUuid string `json:"imageUuid,omitempty"`
	ContainerId string `json:"containerId,omitempty"`
	StateChanged string `json:"stateChanged,omitempty"`
	Services []interface{} `json:"services,omitempty"`
	PortMapping []interface{} `json:"portMapping,omitempty"`
	Users []string `json:"users,omitempty"`
	OperatingSystem string `json:"operatingSystem,omitempty"`
	LastScanned string `json:"lastScanned,omitempty"`
	Source string `json:"source,omitempty"`
	IsInstrumented bool `json:"isInstrumented,omitempty"`
	Environment []interface{} `json:"environment,omitempty"`
	Arguments []interface{} `json:"arguments,omitempty"`
	Command string `json:"command,omitempty"`
	Drift []interface{} `json:"drift,omitempty"`
	Vulnerabilities []interface{} `json:"vulnerabilities,omitempty"`
	Softwares []interface{} `json:"softwares,omitempty"`
	Cluster *Cluster `json:"cluster,omitempty"`
}
