# coding: utf-8

"""
    Container Security API

    # Authentication You must authenticate to the Qualys Cloud Platform using Qualys account credentials (user name and password) and get the JSON Web Token (JWT) before you can start using the Container Security APIs. Use the Qualys Authentication API to get the JWT.  **Example Authentication Curl Request**:  curl -X POST https://gateway/auth -H 'Content-Type: application/x-www-form-urlencoded' -d 'username=value1&password=passwordValue&token=true' where - gateway is the base URL to the Qualys API server where your account is located. - **username** and **password** are the credentials of the user account for which you want to fetch Container Security data. - **token** should be **true** - **Content-Type** should be **application/x-www-form-urlencoded**   # noqa: E501

    OpenAPI spec version: v1.3
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class BulkContainerDetails(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'image_id': 'str',
        'created': 'str',
        'updated': 'str',
        'label': 'list[BulkContainerDetailsLabel]',
        'uuid': 'str',
        'sha': 'str',
        'privileged': 'bool',
        'path': 'str',
        'image_sha': 'str',
        'mac_address': 'str',
        'customer_uuid': 'str',
        'ipv4': 'str',
        'ipv6': 'str',
        'name': 'str',
        'host': 'Host',
        'state': 'str',
        'image_uuid': 'str',
        'container_id': 'str',
        'state_changed': 'str',
        'services': 'list[object]',
        'port_mapping': 'list[object]',
        'users': 'list[str]',
        'operating_system': 'str',
        'last_scanned': 'str',
        'source': 'str',
        'is_instrumented': 'bool',
        'environment': 'list[object]',
        'arguments': 'list[object]',
        'command': 'str',
        'drift': 'list[object]',
        'vulnerabilities': 'list[object]',
        'softwares': 'list[object]',
        'cluster': 'Cluster'
    }

    attribute_map = {
        'image_id': 'imageId',
        'created': 'created',
        'updated': 'updated',
        'label': 'label',
        'uuid': 'uuid',
        'sha': 'sha',
        'privileged': 'privileged',
        'path': 'path',
        'image_sha': 'imageSha',
        'mac_address': 'macAddress',
        'customer_uuid': 'customerUuid',
        'ipv4': 'ipv4',
        'ipv6': 'ipv6',
        'name': 'name',
        'host': 'host',
        'state': 'state',
        'image_uuid': 'imageUuid',
        'container_id': 'containerId',
        'state_changed': 'stateChanged',
        'services': 'services',
        'port_mapping': 'portMapping',
        'users': 'users',
        'operating_system': 'operatingSystem',
        'last_scanned': 'lastScanned',
        'source': 'source',
        'is_instrumented': 'isInstrumented',
        'environment': 'environment',
        'arguments': 'arguments',
        'command': 'command',
        'drift': 'drift',
        'vulnerabilities': 'vulnerabilities',
        'softwares': 'softwares',
        'cluster': 'cluster'
    }

    def __init__(self, image_id=None, created=None, updated=None, label=None, uuid=None, sha=None, privileged=None, path=None, image_sha=None, mac_address=None, customer_uuid=None, ipv4=None, ipv6=None, name=None, host=None, state=None, image_uuid=None, container_id=None, state_changed=None, services=None, port_mapping=None, users=None, operating_system=None, last_scanned=None, source=None, is_instrumented=None, environment=None, arguments=None, command=None, drift=None, vulnerabilities=None, softwares=None, cluster=None):  # noqa: E501
        """BulkContainerDetails - a model defined in Swagger"""  # noqa: E501
        self._image_id = None
        self._created = None
        self._updated = None
        self._label = None
        self._uuid = None
        self._sha = None
        self._privileged = None
        self._path = None
        self._image_sha = None
        self._mac_address = None
        self._customer_uuid = None
        self._ipv4 = None
        self._ipv6 = None
        self._name = None
        self._host = None
        self._state = None
        self._image_uuid = None
        self._container_id = None
        self._state_changed = None
        self._services = None
        self._port_mapping = None
        self._users = None
        self._operating_system = None
        self._last_scanned = None
        self._source = None
        self._is_instrumented = None
        self._environment = None
        self._arguments = None
        self._command = None
        self._drift = None
        self._vulnerabilities = None
        self._softwares = None
        self._cluster = None
        self.discriminator = None
        if image_id is not None:
            self.image_id = image_id
        if created is not None:
            self.created = created
        if updated is not None:
            self.updated = updated
        if label is not None:
            self.label = label
        if uuid is not None:
            self.uuid = uuid
        if sha is not None:
            self.sha = sha
        if privileged is not None:
            self.privileged = privileged
        if path is not None:
            self.path = path
        if image_sha is not None:
            self.image_sha = image_sha
        if mac_address is not None:
            self.mac_address = mac_address
        if customer_uuid is not None:
            self.customer_uuid = customer_uuid
        if ipv4 is not None:
            self.ipv4 = ipv4
        if ipv6 is not None:
            self.ipv6 = ipv6
        if name is not None:
            self.name = name
        if host is not None:
            self.host = host
        if state is not None:
            self.state = state
        if image_uuid is not None:
            self.image_uuid = image_uuid
        if container_id is not None:
            self.container_id = container_id
        if state_changed is not None:
            self.state_changed = state_changed
        if services is not None:
            self.services = services
        if port_mapping is not None:
            self.port_mapping = port_mapping
        if users is not None:
            self.users = users
        if operating_system is not None:
            self.operating_system = operating_system
        if last_scanned is not None:
            self.last_scanned = last_scanned
        if source is not None:
            self.source = source
        if is_instrumented is not None:
            self.is_instrumented = is_instrumented
        if environment is not None:
            self.environment = environment
        if arguments is not None:
            self.arguments = arguments
        if command is not None:
            self.command = command
        if drift is not None:
            self.drift = drift
        if vulnerabilities is not None:
            self.vulnerabilities = vulnerabilities
        if softwares is not None:
            self.softwares = softwares
        if cluster is not None:
            self.cluster = cluster

    @property
    def image_id(self):
        """Gets the image_id of this BulkContainerDetails.  # noqa: E501


        :return: The image_id of this BulkContainerDetails.  # noqa: E501
        :rtype: str
        """
        return self._image_id

    @image_id.setter
    def image_id(self, image_id):
        """Sets the image_id of this BulkContainerDetails.


        :param image_id: The image_id of this BulkContainerDetails.  # noqa: E501
        :type: str
        """

        self._image_id = image_id

    @property
    def created(self):
        """Gets the created of this BulkContainerDetails.  # noqa: E501


        :return: The created of this BulkContainerDetails.  # noqa: E501
        :rtype: str
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this BulkContainerDetails.


        :param created: The created of this BulkContainerDetails.  # noqa: E501
        :type: str
        """

        self._created = created

    @property
    def updated(self):
        """Gets the updated of this BulkContainerDetails.  # noqa: E501


        :return: The updated of this BulkContainerDetails.  # noqa: E501
        :rtype: str
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this BulkContainerDetails.


        :param updated: The updated of this BulkContainerDetails.  # noqa: E501
        :type: str
        """

        self._updated = updated

    @property
    def label(self):
        """Gets the label of this BulkContainerDetails.  # noqa: E501


        :return: The label of this BulkContainerDetails.  # noqa: E501
        :rtype: list[BulkContainerDetailsLabel]
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this BulkContainerDetails.


        :param label: The label of this BulkContainerDetails.  # noqa: E501
        :type: list[BulkContainerDetailsLabel]
        """

        self._label = label

    @property
    def uuid(self):
        """Gets the uuid of this BulkContainerDetails.  # noqa: E501


        :return: The uuid of this BulkContainerDetails.  # noqa: E501
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid):
        """Sets the uuid of this BulkContainerDetails.


        :param uuid: The uuid of this BulkContainerDetails.  # noqa: E501
        :type: str
        """

        self._uuid = uuid

    @property
    def sha(self):
        """Gets the sha of this BulkContainerDetails.  # noqa: E501


        :return: The sha of this BulkContainerDetails.  # noqa: E501
        :rtype: str
        """
        return self._sha

    @sha.setter
    def sha(self, sha):
        """Sets the sha of this BulkContainerDetails.


        :param sha: The sha of this BulkContainerDetails.  # noqa: E501
        :type: str
        """

        self._sha = sha

    @property
    def privileged(self):
        """Gets the privileged of this BulkContainerDetails.  # noqa: E501


        :return: The privileged of this BulkContainerDetails.  # noqa: E501
        :rtype: bool
        """
        return self._privileged

    @privileged.setter
    def privileged(self, privileged):
        """Sets the privileged of this BulkContainerDetails.


        :param privileged: The privileged of this BulkContainerDetails.  # noqa: E501
        :type: bool
        """

        self._privileged = privileged

    @property
    def path(self):
        """Gets the path of this BulkContainerDetails.  # noqa: E501


        :return: The path of this BulkContainerDetails.  # noqa: E501
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this BulkContainerDetails.


        :param path: The path of this BulkContainerDetails.  # noqa: E501
        :type: str
        """

        self._path = path

    @property
    def image_sha(self):
        """Gets the image_sha of this BulkContainerDetails.  # noqa: E501


        :return: The image_sha of this BulkContainerDetails.  # noqa: E501
        :rtype: str
        """
        return self._image_sha

    @image_sha.setter
    def image_sha(self, image_sha):
        """Sets the image_sha of this BulkContainerDetails.


        :param image_sha: The image_sha of this BulkContainerDetails.  # noqa: E501
        :type: str
        """

        self._image_sha = image_sha

    @property
    def mac_address(self):
        """Gets the mac_address of this BulkContainerDetails.  # noqa: E501


        :return: The mac_address of this BulkContainerDetails.  # noqa: E501
        :rtype: str
        """
        return self._mac_address

    @mac_address.setter
    def mac_address(self, mac_address):
        """Sets the mac_address of this BulkContainerDetails.


        :param mac_address: The mac_address of this BulkContainerDetails.  # noqa: E501
        :type: str
        """

        self._mac_address = mac_address

    @property
    def customer_uuid(self):
        """Gets the customer_uuid of this BulkContainerDetails.  # noqa: E501


        :return: The customer_uuid of this BulkContainerDetails.  # noqa: E501
        :rtype: str
        """
        return self._customer_uuid

    @customer_uuid.setter
    def customer_uuid(self, customer_uuid):
        """Sets the customer_uuid of this BulkContainerDetails.


        :param customer_uuid: The customer_uuid of this BulkContainerDetails.  # noqa: E501
        :type: str
        """

        self._customer_uuid = customer_uuid

    @property
    def ipv4(self):
        """Gets the ipv4 of this BulkContainerDetails.  # noqa: E501


        :return: The ipv4 of this BulkContainerDetails.  # noqa: E501
        :rtype: str
        """
        return self._ipv4

    @ipv4.setter
    def ipv4(self, ipv4):
        """Sets the ipv4 of this BulkContainerDetails.


        :param ipv4: The ipv4 of this BulkContainerDetails.  # noqa: E501
        :type: str
        """

        self._ipv4 = ipv4

    @property
    def ipv6(self):
        """Gets the ipv6 of this BulkContainerDetails.  # noqa: E501


        :return: The ipv6 of this BulkContainerDetails.  # noqa: E501
        :rtype: str
        """
        return self._ipv6

    @ipv6.setter
    def ipv6(self, ipv6):
        """Sets the ipv6 of this BulkContainerDetails.


        :param ipv6: The ipv6 of this BulkContainerDetails.  # noqa: E501
        :type: str
        """

        self._ipv6 = ipv6

    @property
    def name(self):
        """Gets the name of this BulkContainerDetails.  # noqa: E501


        :return: The name of this BulkContainerDetails.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this BulkContainerDetails.


        :param name: The name of this BulkContainerDetails.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def host(self):
        """Gets the host of this BulkContainerDetails.  # noqa: E501


        :return: The host of this BulkContainerDetails.  # noqa: E501
        :rtype: Host
        """
        return self._host

    @host.setter
    def host(self, host):
        """Sets the host of this BulkContainerDetails.


        :param host: The host of this BulkContainerDetails.  # noqa: E501
        :type: Host
        """

        self._host = host

    @property
    def state(self):
        """Gets the state of this BulkContainerDetails.  # noqa: E501


        :return: The state of this BulkContainerDetails.  # noqa: E501
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this BulkContainerDetails.


        :param state: The state of this BulkContainerDetails.  # noqa: E501
        :type: str
        """

        self._state = state

    @property
    def image_uuid(self):
        """Gets the image_uuid of this BulkContainerDetails.  # noqa: E501


        :return: The image_uuid of this BulkContainerDetails.  # noqa: E501
        :rtype: str
        """
        return self._image_uuid

    @image_uuid.setter
    def image_uuid(self, image_uuid):
        """Sets the image_uuid of this BulkContainerDetails.


        :param image_uuid: The image_uuid of this BulkContainerDetails.  # noqa: E501
        :type: str
        """

        self._image_uuid = image_uuid

    @property
    def container_id(self):
        """Gets the container_id of this BulkContainerDetails.  # noqa: E501


        :return: The container_id of this BulkContainerDetails.  # noqa: E501
        :rtype: str
        """
        return self._container_id

    @container_id.setter
    def container_id(self, container_id):
        """Sets the container_id of this BulkContainerDetails.


        :param container_id: The container_id of this BulkContainerDetails.  # noqa: E501
        :type: str
        """

        self._container_id = container_id

    @property
    def state_changed(self):
        """Gets the state_changed of this BulkContainerDetails.  # noqa: E501


        :return: The state_changed of this BulkContainerDetails.  # noqa: E501
        :rtype: str
        """
        return self._state_changed

    @state_changed.setter
    def state_changed(self, state_changed):
        """Sets the state_changed of this BulkContainerDetails.


        :param state_changed: The state_changed of this BulkContainerDetails.  # noqa: E501
        :type: str
        """

        self._state_changed = state_changed

    @property
    def services(self):
        """Gets the services of this BulkContainerDetails.  # noqa: E501


        :return: The services of this BulkContainerDetails.  # noqa: E501
        :rtype: list[object]
        """
        return self._services

    @services.setter
    def services(self, services):
        """Sets the services of this BulkContainerDetails.


        :param services: The services of this BulkContainerDetails.  # noqa: E501
        :type: list[object]
        """

        self._services = services

    @property
    def port_mapping(self):
        """Gets the port_mapping of this BulkContainerDetails.  # noqa: E501


        :return: The port_mapping of this BulkContainerDetails.  # noqa: E501
        :rtype: list[object]
        """
        return self._port_mapping

    @port_mapping.setter
    def port_mapping(self, port_mapping):
        """Sets the port_mapping of this BulkContainerDetails.


        :param port_mapping: The port_mapping of this BulkContainerDetails.  # noqa: E501
        :type: list[object]
        """

        self._port_mapping = port_mapping

    @property
    def users(self):
        """Gets the users of this BulkContainerDetails.  # noqa: E501


        :return: The users of this BulkContainerDetails.  # noqa: E501
        :rtype: list[str]
        """
        return self._users

    @users.setter
    def users(self, users):
        """Sets the users of this BulkContainerDetails.


        :param users: The users of this BulkContainerDetails.  # noqa: E501
        :type: list[str]
        """

        self._users = users

    @property
    def operating_system(self):
        """Gets the operating_system of this BulkContainerDetails.  # noqa: E501


        :return: The operating_system of this BulkContainerDetails.  # noqa: E501
        :rtype: str
        """
        return self._operating_system

    @operating_system.setter
    def operating_system(self, operating_system):
        """Sets the operating_system of this BulkContainerDetails.


        :param operating_system: The operating_system of this BulkContainerDetails.  # noqa: E501
        :type: str
        """

        self._operating_system = operating_system

    @property
    def last_scanned(self):
        """Gets the last_scanned of this BulkContainerDetails.  # noqa: E501


        :return: The last_scanned of this BulkContainerDetails.  # noqa: E501
        :rtype: str
        """
        return self._last_scanned

    @last_scanned.setter
    def last_scanned(self, last_scanned):
        """Sets the last_scanned of this BulkContainerDetails.


        :param last_scanned: The last_scanned of this BulkContainerDetails.  # noqa: E501
        :type: str
        """

        self._last_scanned = last_scanned

    @property
    def source(self):
        """Gets the source of this BulkContainerDetails.  # noqa: E501


        :return: The source of this BulkContainerDetails.  # noqa: E501
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this BulkContainerDetails.


        :param source: The source of this BulkContainerDetails.  # noqa: E501
        :type: str
        """

        self._source = source

    @property
    def is_instrumented(self):
        """Gets the is_instrumented of this BulkContainerDetails.  # noqa: E501


        :return: The is_instrumented of this BulkContainerDetails.  # noqa: E501
        :rtype: bool
        """
        return self._is_instrumented

    @is_instrumented.setter
    def is_instrumented(self, is_instrumented):
        """Sets the is_instrumented of this BulkContainerDetails.


        :param is_instrumented: The is_instrumented of this BulkContainerDetails.  # noqa: E501
        :type: bool
        """

        self._is_instrumented = is_instrumented

    @property
    def environment(self):
        """Gets the environment of this BulkContainerDetails.  # noqa: E501


        :return: The environment of this BulkContainerDetails.  # noqa: E501
        :rtype: list[object]
        """
        return self._environment

    @environment.setter
    def environment(self, environment):
        """Sets the environment of this BulkContainerDetails.


        :param environment: The environment of this BulkContainerDetails.  # noqa: E501
        :type: list[object]
        """

        self._environment = environment

    @property
    def arguments(self):
        """Gets the arguments of this BulkContainerDetails.  # noqa: E501


        :return: The arguments of this BulkContainerDetails.  # noqa: E501
        :rtype: list[object]
        """
        return self._arguments

    @arguments.setter
    def arguments(self, arguments):
        """Sets the arguments of this BulkContainerDetails.


        :param arguments: The arguments of this BulkContainerDetails.  # noqa: E501
        :type: list[object]
        """

        self._arguments = arguments

    @property
    def command(self):
        """Gets the command of this BulkContainerDetails.  # noqa: E501


        :return: The command of this BulkContainerDetails.  # noqa: E501
        :rtype: str
        """
        return self._command

    @command.setter
    def command(self, command):
        """Sets the command of this BulkContainerDetails.


        :param command: The command of this BulkContainerDetails.  # noqa: E501
        :type: str
        """

        self._command = command

    @property
    def drift(self):
        """Gets the drift of this BulkContainerDetails.  # noqa: E501


        :return: The drift of this BulkContainerDetails.  # noqa: E501
        :rtype: list[object]
        """
        return self._drift

    @drift.setter
    def drift(self, drift):
        """Sets the drift of this BulkContainerDetails.


        :param drift: The drift of this BulkContainerDetails.  # noqa: E501
        :type: list[object]
        """

        self._drift = drift

    @property
    def vulnerabilities(self):
        """Gets the vulnerabilities of this BulkContainerDetails.  # noqa: E501


        :return: The vulnerabilities of this BulkContainerDetails.  # noqa: E501
        :rtype: list[object]
        """
        return self._vulnerabilities

    @vulnerabilities.setter
    def vulnerabilities(self, vulnerabilities):
        """Sets the vulnerabilities of this BulkContainerDetails.


        :param vulnerabilities: The vulnerabilities of this BulkContainerDetails.  # noqa: E501
        :type: list[object]
        """

        self._vulnerabilities = vulnerabilities

    @property
    def softwares(self):
        """Gets the softwares of this BulkContainerDetails.  # noqa: E501


        :return: The softwares of this BulkContainerDetails.  # noqa: E501
        :rtype: list[object]
        """
        return self._softwares

    @softwares.setter
    def softwares(self, softwares):
        """Sets the softwares of this BulkContainerDetails.


        :param softwares: The softwares of this BulkContainerDetails.  # noqa: E501
        :type: list[object]
        """

        self._softwares = softwares

    @property
    def cluster(self):
        """Gets the cluster of this BulkContainerDetails.  # noqa: E501


        :return: The cluster of this BulkContainerDetails.  # noqa: E501
        :rtype: Cluster
        """
        return self._cluster

    @cluster.setter
    def cluster(self, cluster):
        """Sets the cluster of this BulkContainerDetails.


        :param cluster: The cluster of this BulkContainerDetails.  # noqa: E501
        :type: Cluster
        """

        self._cluster = cluster

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(BulkContainerDetails, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, BulkContainerDetails):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
